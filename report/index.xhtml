


<html xml:lang="nb-no" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>SVG i dagens nettlesermarked</title>
  <link rel="stylesheet" type="text/css" href="style.css" />
  <link rel="stylesheet" type="text/css" href="print.css" media="print" />
 </head>
 <body class="main">
 <h1><a name="h-1"></a>SVG i dagens nettlesermarked</h1>
<pre class="frontpage">
1. juni 2010

Bachelor i Informatikk 2009/2010

Høgskolen i Vestfold

Gruppemedlemmer:

  Petter Dahl Thunæs
  Robin Smidsrød

Veileder: Viggo Holmstedt
</pre>
<div class="toc">
  <h2><a name="h-1.1"></a>Innholdsfortegnelse</h2> 
<!-- Table of Contents generated by Perl - HTML::Toc -->
<ul>
   <li><a href="#h-1">SVG i dagens nettlesermarked</a>
      <ul>
         <li><a href="#h-1.1">Innholdsfortegnelse</a></li>
         <li><a href="#h-1.2">Forord</a>
            <ul>
               <li><a href="#h-1.2.1">A Problemstilling</a></li>
               <li><a href="#h-1.2.2">B Spørsmål som dekker grunnlaget for oppgaven</a></li>
               <li><a href="#h-1.2.3">C Arbeidsmetodikk</a></li>
               <li><a href="#h-1.2.4">D Modellapplikasjon</a>
                  <ul>
                     <li><a href="#h-1.2.4.1">D.1 Bibliotek: SVG-generator</a></li>
                     <li><a href="#h-1.2.4.2">D.2 Applikasjon: Grafisk brukergrensesnitt for håndtering av inndata</a></li>
                     <li><a href="#h-1.2.4.3">D.3 Lisensiering</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.2.5">E Valg av verktøy til prosessen</a></li>
            </ul>
         </li>
         <li><a href="#h-1.3">1 Introduksjon til SVG</a>
            <ul>
               <li><a href="#h-1.3.1">1.1 Hva er SVG?</a>
                  <ul>
                     <li><a href="#h-1.3.1.1">1.1.2 Forskjellige SVG profiler til ulike formål</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.3.2">1.2 Medlemmer i SVG Working Group</a></li>
               <li><a href="#h-1.3.3">1.3 Historisk bakgrunn</a>
                  <ul>
                     <li><a href="#h-1.3.3.1">1.3.1 Revisjoner og profiler av SVG-standarden</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.3.4">1.4 Hvordan ser SVG ut?</a>
                  <ul>
                     <li><a href="#h-1.3.4.1">1.4.1 Linje</a></li>
                     <li><a href="#h-1.3.4.2">1.4.2 Sammenhengende linjer</a></li>
                     <li><a href="#h-1.3.4.3">1.4.3 Polygon</a></li>
                     <li><a href="#h-1.3.4.4">1.4.4 Rektangel</a></li>
                     <li><a href="#h-1.3.4.5">1.4.5 Sti</a></li>
                     <li><a href="#h-1.3.4.6">1.4.6 Sirkel</a></li>
                     <li><a href="#h-1.3.4.7">1.4.7 Ellipse</a></li>
                     <li><a href="#h-1.3.4.8">1.4.8 Tekst</a></li>
                     <li><a href="#h-1.3.4.9">1.4.9 Filter</a></li>
                     <li><a href="#h-1.3.4.10">1.4.10 Animasjon</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.3.5">1.5 Programvare som kan produsere SVG-dokumenter</a>
                  <ul>
                     <li><a href="#h-1.3.5.1">1.5.1 Kommersiell programvare</a></li>
                     <li><a href="#h-1.3.5.2">1.5.2 Fri programvare</a></li>
                     <li><a href="#h-1.3.5.3">1.5.3 Verktøy for utviklere</a></li>
                  </ul>
               </li>
            </ul>
         </li>
         <li><a href="#h-1.4">2 Støtte for SVG i populære nettlesere</a>
            <ul>
               <li><a href="#h-1.4.1">2.1 Kort om nettlesere og SVG-støtte</a></li>
               <li><a href="#h-1.4.2">2.2 Dekningsgrad i implementasjonene</a></li>
               <li><a href="#h-1.4.3">2.3 Funksjonalitet som ikke er implementert</a></li>
               <li><a href="#h-1.4.4">2.4 Mangler i implementasjon av SVG</a></li>
            </ul>
         </li>
         <li><a href="#h-1.5">3 Microsofts rolle i utbredelsen av SVG</a>
            <ul>
               <li><a href="#h-1.5.1">3.1 Internet Explorers manglende støtte for SVG</a></li>
               <li><a href="#h-1.5.2">3.2 Microsoft melder seg inn i SVG Working Group</a></li>
               <li><a href="#h-1.5.3">3.3 Microsoft IE9 vil støtte SVG</a></li>
            </ul>
         </li>
         <li><a href="#h-1.6">4 Alternativer til SVG</a>
            <ul>
               <li><a href="#h-1.6.1">4.1 Hvordan utviklere benytter Adobe Flash fordi SVG ikke er tilgjengelig?</a>
                  <ul>
                     <li><a href="#h-1.6.1.1">4.1.1 Fordeler ved Adobe Flash</a></li>
                     <li><a href="#h-1.6.1.2">4.1.2 Ulemper ved Adobe Flash</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.6.2">4.2 Kan Microsoft SilverLight benyttes for å omgå mangel på SVG-støtte?</a>
                  <ul>
                     <li><a href="#h-1.6.2.1">4.2.1 Fordeler ved Microsoft Silverlight</a></li>
                     <li><a href="#h-1.6.2.2">4.2.2 Ulemper ved Microsoft Silverlight</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.6.3">4.3 Kan JavaScript-bibliotek som Raphaël være et alternativ til SVG?</a>
                  <ul>
                     <li><a href="#h-1.6.3.1">4.3.1 Fordeler ved Raphaël sitt JavaScript bibliotek</a></li>
                     <li><a href="#h-1.6.3.2">4.3.2 Ulemper ved bruk av Raphaël JavaScript-bibliotek</a></li>
                  </ul>
               </li>
               <li><a href="#h-1.6.4">4.4 Microsoft VML, et alternativ til SVG</a>
                  <ul>
                     <li><a href="#h-1.6.4.1">4.4.1 Fordeler ved Microsoft VML</a></li>
                     <li><a href="#h-1.6.4.2">4.4.2 Ulemper ved Microsoft VML</a></li>
                  </ul>
               </li>
            </ul>
         </li>
         <li><a href="#h-1.7">5 Konklusjon</a></li>
         <li><a href="#h-1.8">Bibliografi</a></li>
         <li><a href="#h-1.9">Vedlegg</a></li>
      </ul>
   </li>
</ul>
<!-- End of generated Table of Contents -->
 </div>
<h2><a name="h-1.2"></a>Forord</h2>
<h3 id="aproblemstilling"><a name="h-1.2.1"></a>A Problemstilling</h3>
<p>SVG-standarden (Scalable Vector Graphics) har vært tilgjengelig i mange år. Den har likevel ikke total markedspenetrasjon. Vi ønsker å finne ut hvorfor SVG den dag i dag fremdeles ikke kan benyttes av utviklere uten å måtte forholde seg til hvor godt standarden er støttet. En viktig del av dette er å finne ut hvordan Microsoft har påvirket utvikleres syn på SVG som en moden standard. I tillegg ønsker vi også å finne ut av om SVG fremdeles er den teknologien som anbefales for presentasjon av skalerbar grafikk på World Wide Web, eller om det er kommet andre teknologier på markedet som bedre løser SVG sitt problemområde.</p>
<p>For å illustrere bruk av SVG ønsker vi å lage et bibliotek som genererer diagrammer til forretningsbruk, slik som kakediagram og linjediagram. Vi velger også å lage et tradisjonelt program med grafisk brukergrensesnitt. Dette programmet skal ta imot data fra brukeren og generere SVG-filer ved hjelp av biblioteket omtalt over.</p>
<h3 id="bsprsmlsomdekkergrunnlagetforoppgaven"><a name="h-1.2.2"></a>B Spørsmål som dekker grunnlaget for oppgaven</h3>
<ul>
  <li>Introduksjon: Hva er SVG?</li>
  <li>Hvilke nettlesere må støtte SVG for at man som utvikler kan benytte SVG uten å tenke på klient-støtte? <ul>
      <li>Hvor mye av SVG-standarden støtter de forskjellige nettleserne? <ul>
          <li>Hvilke nettlesere støtter standarden i det hele tatt?</li>
          <li>Er det noe spesifikk funksjonalitet i SVG-standarden som ikke er støttet?</li>
          <li>Finnes det noen mangler eller andre svakheter i støtten av SVG-standarden i disse nettleserne, f.eks. feil implementasjon?</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Hvorfor støtter ikke Microsoft Internet Explorer SVG-standarden? <ul>
      <li>Hvordan forholder Microsoft seg til W3C sin SVG-standard? <ul>
          <li>Har Microsofts synspunkt endret seg over tid?</li>
        </ul>
      </li>
      <li>Hvilke andre teknologier har Microsoft valgt å benytte isteden?</li>
      <li>Hvilken innvirkning på markedet har Microsoft sitt synspunkt på adopsjon av SVG i sin helhet?</li>
    </ul>
  </li>
  <li>Hvilke alternative teknologier eksisterer som dekker SVG sin funksjonalitet? <ul>
      <li>Hvordan benytter utviklere Adobe Flash fordi SVG ikke er tilgjengelig?</li>
      <li>Kan Microsoft SilverLight også benyttes for å omgå mangel på SVG-støtte?</li>
      <li>Kan JavaScript-bibliotek som [Raphaël http://raphaeljs.com/] være et alternativ til SVG? <ul>
          <li>Hvordan skiller RaphaëlJS sin imperative fokus seg fra SVG sin deklarative fokus?</li>
        </ul>
      </li>
      <li>Kunne VML (Vector Markup Lanuage), som Microsoft støtter, vært avansert som en global standard istedenfor SVG? <ul>
          <li>Finnes det proprietære elementer i VML som gjør den uskikket som en åpen standard?</li>
          <li>Er VML som standard knyttet for sterkt til Microsoft sin implementasjon?</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Konklusjon: Hva må skje i markedet for at SVG skal &quot;ta av&quot; som standard?</li>
</ul>
<h3 id="carbeidsmetodikk"><a name="h-1.2.3"></a>C Arbeidsmetodikk</h3>
<p>Vi vil bruke en smidig utviklingsmetodikk (agile), hvor vi setter opp korte perioder (sprint), hvor vi jobber på spesifikke problemstillinger. Idéen med smidig utvikling er at etter hver periode sitter man igjen med et system som virker med den funksjonaliteten som var planlagt for perioden. Hver periode begynner med en planleggingsrunde over hva man skal ha med, og avsluttes med versjoner av applikasjon og bibliotek som kan benyttes slik de er. Vi setter opp til en felles dag i uken med arbeid i plenum og jobber hver for oss de resterende dagene. Vi kommer til å bruke 3 uker pr. periode. Oppgaver som ikke er utført i en periode på grunn av manglende tid vil bli overført til neste periode. Start og slutt på en periode legges til felles arbeidsdager i den gjeldende uken. All dokumentasjon av programvaren benytter engelsk som språk. Dette gjør det enklere for tredjeparter å evaluere koden i prosjektet uavhengig av norsk språkforståelse.</p>
<h3 id="dmodellapplikasjon"><a name="h-1.2.4"></a>D Modellapplikasjon</h3>
<h4 id="d.1bibliotek:svg-generator"><a name="h-1.2.4.1"></a>D.1 Bibliotek: SVG-generator</h4>
<p>Vi skal lage et Java-bibliotek som gjør det mulig å generere SVG-filer basert på instanser med strukturerte data. Vi velger å benytte mønstre for god programdesign slik at biblioteket gjør det enkelt å utvide biblioteket til å støtte mer funksjonalitet på et senere tidspunkt. Vi planlegger å benytte white-box reuse-konseptet for å oppnå høy fleksibilitet.</p>
<h4 id="d.2applikasjon:grafiskbrukergrensesnittforhndteringavinndata"><a name="h-1.2.4.2"></a>D.2 Applikasjon: Grafisk brukergrensesnitt for håndtering av inndata</h4>
<p>Her planlegger vi å lage en normal applikasjon som kan gi et grensesnitt til brukeren for å skrive inn data for å fylle inn et datasett. Den skal igjen kunne generere SVG-filer basert på dette datasettet. Vi planlegger å benytte mønstre for god programdesign for å gjøre applikasjonen enkel å utvide og lettere å vedlikeholde. Dette vil passe godt sammen med vårt valg om å benytte en smidig utviklingsmetodikk.</p>
<h4 id="d.3lisensiering"><a name="h-1.2.4.3"></a>D.3 Lisensiering</h4>
<p>Kildekoden til biblioteket og applikasjonen velger vi å tilgjengeliggjøre under BSD-lisensen. Dette gjør det mulig for andre utviklere å benytte koden fra denne bacheloroppgaven i kommersielle sammenhenger.</p>
<h3 id="evalgavverktytilprosessen"><a name="h-1.2.5"></a>E Valg av verktøy til prosessen</h3>
<p>Vi velger å benytte oss av Eclipse på grunn av god erfaring med denne utviklingsplatformen. Siden vi har opparbeidet oss god erfaring med bruk av Java velger vi å benytte dette programmeringsspråket til modellapplikasjonen.</p>
<p>For å koordinere arbeidsoppgavene i prosjektet velger vi å benytte LiquidPlanner.com (LP) som er et svært godt planleggingsverktøy som er gratis tilgjenglig for akademisk bruk. LP er svært godt egnet til en smidig utviklingsmetodikk.</p>
<p>Versjonskontroll er viktig i større prosjekter. For å dekke det behovet velger vi å benytte Git og <a href="http://github.com" title="github - social coding, open source code hosting service">github.com</a><sup><a class="bib" href="#bib1">1</a></sup>. Git gir oss gode muligheter til å jobbe på flere deler av prosjektet samtidig uten frykt for integrasjonsproblemer. Denne muligheten kommer fra det faktum at Git er et distribuert revisjonskontrollsystem.</p>
<p>Grunnen til at vi velger GitHub.com som tjenesteleverandør er at de gir gratis tilgang til prosjekter som klassifiseres som fri programvare. De er en seriøs aktør på markedet med svært god stabilitet og sikkerhet. I tillegg har brukergrensesnittet deres mange gode funksjoner som øker effektiviteten i en distribuert utviklingsarbeidsflyt. Dersom noen utviklere i fremtiden ønsker å videreutvikle prosjektet gir GitHub dem en enkel mulighet til å gjøre det.</p>
<h2><a name="h-1.3"></a>1 Introduksjon til SVG</h2>
<h3 id="hvaersvg"><a name="h-1.3.1"></a>1.1 Hva er SVG?</h3>
<p>Scalable Vector Graphics (<a href="http://www.w3.org/Graphics/SVG/" title="Scalable Vector Graphics - XML Graphics for the Web, W3C, 2009-12-11">SVG</a><sup><a class="bib" href="#bib2">2</a></sup>) er en åpen standard utgitt av World Wide Web Consortium (<a href="http://www.w3.org" title="World Wide Web Consortium front page">W3C</a><sup><a class="bib" href="#bib3">3</a></sup>) som skal dekke behovet i markedet for å kunne representere to-dimensjonal grafikk på et utvalg av medier og enheter. Man kan si at det er et programmeringspråk for å beskrive to-dimensjonal grafikk og grafiske applikasjoner. Med to-dimensjonal grafikk snakker vi om vektoriserte figurer, raster-grafikk (bitmap) og tekst-elementer. </p>
<p>SVG baserer seg på mange andre åpne standarder og prøver å <a href="http://www.w3.org/2007/11/SVG_rechartering/SVG-WG-charter.html#coordination" title="SVG Dependencies, W3C/Doug Schepers/Chris Lilley, 2008-04-16">gjenbruke de</a><sup><a class="bib" href="#bib4">4</a></sup> så mye som mulig for å unngå overlappende standardiseringsarbeid, både innenfor og utenfor W3C-prosessen. </p>
<p>SVG-standarden er implementert som en applikasjon i <a href="http://www.w3.org/standards/xml" title="eXtensible Markup Language overview page, W3C">XML</a><sup><a class="bib" href="#bib5">5</a></sup>. Det er en <a href="http://en.wikipedia.org/wiki/Declarative_programming" title="Declarative programming, Wikipedia, lest 2010-02-26">deklarativ</a><sup><a class="bib" href="#bib6">6</a></sup> standard på lik linje med <a href="http://www.w3.org/standards/webdesign/htmlcss" title="HyperText Markup Language overview page, W3C">HTML</a><sup><a class="bib" href="#bib7">7</a></sup>. Hvordan SVG fysisk representeres i XML omtales i seksjon 1.4. </p>
<p>SVG har støtte for scripting, noe som gjør det mulig å lage avanserte brukergrensesnitt og interaksjoner basert på kjente programmeringsprinsipper benyttet i tradisjonell web-design. SVG benytter <a href="http://www.ecmascript.org/" title="ECMAScript - the language of the web, Ecma International">ECMAScript</a><sup><a class="bib" href="#bib8">8</a></sup> som sitt scriptspråk, noe som gjør det lett for en web-utvikler å benytte eksisterende kunnskap til å gjøre SVG-dokumenter interaktive. SVG benytter også <a href="http://www.w3.org/DOM/" title="Document Object Model overview page, W3C/Philippe Le Hégaret/Ray Whitmer/Lauren Wood, 2009-01-06">DOM-standarden</a><sup><a class="bib" href="#bib9">9</a></sup>, på linje med HTML og XML, for å kunne adressere og manipulere individuelle elementer i et SVG-dokument fra et script. </p>
<p>SVG har også støtte for animasjon. Dette gjøres med notasjon basert på <a href="http://www.w3.org/TR/smil-animation/" title="Synchronized Multimedia Integration Language W3C Recommendation, W3C, 2001-09-04">SMIL-standarden</a><sup><a class="bib" href="#bib10">10</a></sup>. Hvordan SMIL benyttes for å animere et element blir omtalt i seksjon 1.4. Animasjon basert på SMIL er deklarativ, mens animasjon basert på bruk av script-støtten i SVG er prosedyre-basert. Den deklarative notasjonen med SMIL er noe som brukere som har erfaring med tradisjonell animasjon sannsynligvis vil kjenne igjen fordi det baserer seg på tidskoder, synkronisering av aktiviteter over en tidslinje med mer. Tradisjonelle programmerere, derimot, vil sannsynligvis føle seg mer bekvemme med å bruke script-støtten for å utføre en tilsvarende animasjon. Dette betyr i praksis at SVG-standarden er fleksibel nok til at brukere med forskjellige teknologisk utgangspunkt kan ta den i bruk og benytte de delene som er nødvendig for dem.</p>
<p>W3C forklarer selv hva SVG er <a href="http://www.w3.org/standards/webdesign/graphics" title="Graphics overview page, W3C">på denne måten</a><sup><a class="bib" href="#bib11">11</a></sup>:</p>
<blockquote>
  <p>Scalable Vector Graphics (SVG) is like HTML for graphics. It is a markup language for describing all aspects of an image or Web application, from the geometry of shapes, to the styling of text and shapes, to animation, to multimedia presentations including video and audio. It is fully interactive, and includes a scriptable DOM as well as declarative animation (via the SMIL specification). It supports a wide range of visual features such as gradients, opacity, filters, clipping, and masking. </p>
  <p>The use of SVG allows fully scalable, smooth, reusable graphics, from simple graphics to enhance HTML pages, to fully interactive chart and data visualization, to games, to standalone high-quality static images. SVG is natively supported by most modern browsers (with plugins to allow its use on all browsers), and is widely available on mobile devices and set-top boxes. All major vector graphics drawing tools import and export SVG, and they can also be generated through client-side or server-side scripting languages. </p>
</blockquote>
<h4 id="forskjelligesvgprofilertilulikeforml"><a name="h-1.3.1.1"></a>1.1.2 Forskjellige SVG profiler til ulike formål</h4>
<p>Det finnes flere forskjellige <a href="http://www.w3.org/Graphics/SVG/About.html" title="About SVG - 2d Graphics in XML, W3C/Chris Lilley/Dean Jackson, 2004-10-29">profiler av SVG</a><sup><a class="bib" href="#bib12">12</a></sup> som beskriver deler av spesifikasjonen. Disse forskjellige profilene er utviklet slik at leverandører av programvare og enheter kan støtte et del-sett av SVG sin totale funksjonalitet og fremdeles være kompatibel med en gitt profil. Under kan du se en oversikt over de forskjellige profilene som er definert. </p>
<p>
  <object data="1_introduction/svg-profiles.svg" height="280" type="image/svg+xml" width="380">Forskjellige SVG-profiler</object>
</p>
<p>SVG Mobile-profilen (som ombefatter både SVG Tiny og SVG Basic) ble adoptert av <a href="http://www.3gpp.org/" title="3rd Generation Partnership Project front page, ETSI">3GPP</a><sup><a class="bib" href="#bib13">13</a></sup>, en samling av mobiloperatører, som grunnlaget for deres støtte for grafikk i mobile enheter. Flere av disse mobiloperatørene jobber aktivt med å videreutvikle SVG Mobile-profilen for å dekke deres behov på mobile enheter. </p>
<p>SVG Print-profilen fokuserer på hvordan SVG kan benyttes til å gi høyoppløselige utskrifter av grafikk på papir og andre ikke-bevegelige medier. Animasjon og andre interaktive elementer i SVG er naturligvis ikke med i denne profilen da det ikke lar seg reprodusere i statisk format. Canon, HP, Adobe og Corel er aktive medlemmer som jobber med videreutvikling av denne profilen. </p>
<p>SVG Full er den profilen som dekker opp for alle de andre variantene. Hvis man hevder at en applikasjon støtter SVG Full må den også støtte alle de andre profilene, fordi de andre profilene bare er del-sett av SVG Full. </p>
<h3 id="medlemmerisvgworkinggroup"><a name="h-1.3.2"></a>1.2 Medlemmer i SVG Working Group</h3>
<p>De følgende institusjoner er registrert med et eller flere <a href="http://www.w3.org/2000/09/dbwg/details?group=19480&amp;public=1&amp;gs=1&amp;" title="SVG Working Group Participants, W3C/Gerald Oskoboiny/Dominique Hazaël-Massieux, 2010-04-09">medlemmer i SVG Working Group (WG) pr. 7. mars 2010</a><sup><a class="bib" href="#bib14">14</a></sup>.</p>
<ul>
  <li>Adobe Systems Inc.</li>
  <li>Apple, Inc.</li>
  <li>Canon, Inc.</li>
  <li>Cisco</li>
  <li>ERICSSON</li>
  <li>Ikivo AB</li>
  <li>INSTITUT TELECOM</li>
  <li>Microsoft Corporation</li>
  <li>Mozilla Foundation</li>
  <li>Opera Software</li>
  <li>PTC-Arbortext</li>
  <li>Quickoffice Inc</li>
  <li>Rochester Institute of Technology</li>
  <li>Samsung Electronics Co., Ltd.</li>
  <li>Telecom Italia SpA</li>
</ul>
<p>Ved å analysere epost-listene <a href="http://lists.w3.org/Archives/Public/public-svg-wg/" title="SVG Working Group public mailing list archive, uthentet 2010-04-01">public-svg-wg</a><sup><a class="bib" href="#bib15">15</a></sup> og <a href="http://lists.w3.org/Archives/Public/public-svg-ig/" title="SVG Interest Group public mailing list archive, uthentet 2010-04-01">public-svg-ig</a><sup><a class="bib" href="#bib16">16</a></sup> kommer vi frem til følgende oversikt over aktivitet fra de forskjellige medlemsorganisasjoner:</p>
<table>
  <col />
  <col />
  <col />
  <thead>
    <tr>
      <th>Organisasjon</th>
      <th>Ant. meld. til WG+IG</th>
      <th>Andel</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>W3C</td>
      <td>1089</td>
      <td>66%</td>
    </tr>
    <tr>
      <td>Opera</td>
      <td>253</td>
      <td>15%</td>
    </tr>
    <tr>
      <td>Canon</td>
      <td>158</td>
      <td>9%</td>
    </tr>
    <tr>
      <td>Institut Telecom</td>
      <td>42</td>
      <td>2%</td>
    </tr>
    <tr>
      <td>Ikivo</td>
      <td>22</td>
      <td>1%</td>
    </tr>
    <tr>
      <td>Mozilla</td>
      <td>19</td>
      <td>1%</td>
    </tr>
    <tr>
      <td>Apple</td>
      <td>19</td>
      <td>1%</td>
    </tr>
    <tr>
      <td>Quickoffice</td>
      <td>18</td>
      <td>1%</td>
    </tr>
    <tr>
      <td>Adobe</td>
      <td>11</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Microsoft</td>
      <td>3</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Samsung</td>
      <td>1</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Telecom Italia SpA</td>
      <td>0</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Rochester Institute of Technology</td>
      <td>0</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>PTC-Arbortext</td>
      <td>0</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Ericsson</td>
      <td>0</td>
      <td>0%</td>
    </tr>
    <tr>
      <td>Cisco</td>
      <td>0</td>
      <td>0%</td>
    </tr>
  </tbody>
</table>
<p>
  <object data="1_introduction/epost-aktivitet.svg" height="375" type="image/svg+xml" width="500">Fordeling av epost-aktivitet</object>
</p>
<p>Dessverre ble epost-listene til SVG WG <a href="#vedlegg" title="Information directly from Doug Schepers, W3C SVG WG Team Contact, dated 2010-03-08">først gjort offentlig i 2008</a>, noe som fører til at denne oversikten over aktivitet ikke gjenspeiler en helhetlig oversikt over all kommunikasjon som har forekommet internt i SVG WG, men kun for de siste to årene. Det er uansett interessant å se på disse dataene, da de gjenspeiler interesse fra de forskjellige organisasjonene som står som medlemmer.</p>
<p>Det som umiddelbart viser seg er at W3C internt står for mesteparten av aktiviteten rundt standardiseringsarbeidet, hele 2/3 av all aktiviteten i perioden tallene er hentet fra.</p>
<p>Opera viser seg som den mest aktive nettleser-leverandøren med 15% aktivitet. Deres fokus på SVG gjenspeiler seg også i kvaliteten på deres implementasjon av SVG i deres nettleser, noe som blir mer omtalt i kapittel 2. Mozilla, Apple og Microsoft derimot viser ikke altfor stor aktivitet i gruppen, noe som igjen kan gjenspeiles i deres implementasjoner (mer informasjon om forskjeller i implementasjonene omtales i kapittel 2).</p>
<p>Canon viser et ganske høyt aktivitetsnivå, noe som overrasker, siden de er et firma som hovedsaklig baserer seg på produkter som driver med raster-teknologi (fotografi og utskrift). Adobe, som også driver med grafiske applikasjoner, viser helt klart et lavere aktivitetsnivå, noe som kan bety at de ikke er fullt så fokusert på standardisering pga. deres høye markedsandel i deres segment.</p>
<p><a href="http://www.institut-telecom.fr/p_en_present_inst_36.html" title="Institut Télécom about page, lest 2010-04-01">Institut Télécom</a><sup><a class="bib" href="#bib17">17</a></sup> er et firma som driver med trening og utdanning av fagpersoner innen telekom-sektoren. Deres aktivitet viser at de er interessert i åpne standarder, og at vektorisert grafikk er et viktig område også for telekom-sektoren. <a href="http://www.ikivo.com/04about.html" title="Ikivo AB about page, lest 2010-04-01">Ikivo AB</a><sup><a class="bib" href="#bib18">18</a></sup> er et selskap som fokuserer på multimediale applikasjoner for mobile enheter. Deres aktivitet viser at de ser på SVG som en viktig standard for mobile enheter. De fremhever spesifikt på <a href="http://www.ikivo.com/open_standards.html" title="Based on open standards, Ikivo AB, 2009-10-23">sin informasjonsside</a><sup><a class="bib" href="#bib19">19</a></sup> at de benytter SVG Mobile 1.2 og andre åpne standarder i deres <em>Enrich</em>-produkter.</p>
<p>De resterende medlemmene viser liten til ingen aktivitet i arbeidsgruppen, noe som kan bety at de ikke interesserer seg fullt så mye for videre utbedring av SVG-standarden, eller at de benytter andre måter å kommunisere med de andre medlemmene i arbeidsgruppen.</p>
<p>Som <a href="#vedlegg" title="Information directly from Doug Schepers, W3C SVG WG Team Contact, dated 2010-03-08">vår epost til SVG WG</a> viser, har vi prøvd å få tak i mer informasjon om aktiviteten før 2008, men foreløpig (2010-01-04) er det uvisst hvorvidt vi vil få tilgang til disse opplysningene. Hvis vi får opplysningene kan vi gjøre en større analyse av aktiviteten internt i arbeidsgruppen for å se hvilke organisasjoner som har bidratt mest til at standarden har utviklet seg. Hvis ikke vi får disse opplysningene må vi basere våre funn på de offentlige dataene gjengitt ovenfor.</p>
<h3 id="historiskbakgrunn"><a name="h-1.3.3"></a>1.3 Historisk bakgrunn</h3>
<p>Med utgangspunkt i dokumentet <a href="http://www.w3.org/Graphics/SVG/WG/wiki/Secret_Origin_of_SVG" title="The Secret Origin of SVG, W3C/Doug Schepers, 2008-09-15">The Secret Origin of SVG</a><sup><a class="bib" href="#bib20">20</a></sup> er det tydelig at mange organisasjoner var svært interessert i å få en enhetlig standard for vektorgrafikk på internett i midten av 1990-tallet. Det eksisterte mange forskjellige varianter, men rundt 1998 var det disse fem standardene som sto igjen som de mest sannsynlige til å ta over markedet som en åpen standard for vektorgrafikk: <a href="http://www.w3.org/TR/1998/NOTE-PGML-19980410" title="Precision Graphics Markup Language (PGML) W3C note, Adobe/IBM/Netscape/Sun, 1998-04-10">PGML</a><sup><a class="bib" href="#bib21">21</a></sup>, <a href="http://www.w3.org/Submission/1998/08/" title="Vector Markup Language specification, Autodesk/Hewlett-Packard/Macromedia/Microsoft/Visio, 1998-05-13">VML</a><sup><a class="bib" href="#bib22">22</a></sup>, <a href="http://www.w3.org/TR/1998/NOTE-HGML-19980619" title="Hyper Graphics Markup Language W3C note, PRP (UK)/Orange PCSL, 1998-06-19">HGML</a><sup><a class="bib" href="#bib23">23</a></sup>, <a href="http://www.w3.org/Submission/1998/20/" title="Draw Markup Language specification, Excosoft AB, 1998-11-12">DrawML</a><sup><a class="bib" href="#bib24">24</a></sup> og <a href="http://www.w3.org/Submission/1998/13/" title="Web profile of Computer Graphics Metafile standard, ISO/IEC 8632:1992 specification, Boeing/CCLRC/Inso/JISC/Xerox, 1998-09-19">WebCGM</a><sup><a class="bib" href="#bib25">25</a></sup>.</p>
<p>På grunnlag av disse forskjellige forslagene til standarder ble det avgjort å stifte en arbeidsgruppe (SVG WG) for å utvikle en ny standard for vektorgrafikk. Standarden ble utviklet fra bunnen av med erfaringer fra de overnevnte forslagene.</p>
<p>SVG sin kompakte syntaks for å beskrive stier (path data) arves i stor grad fra VML. Dette ble bestemt etter undersøkelser som viste at den kompakte syntaksen hadde en stor innvirkning på filstørrelse, både med og uten komprimering. Fra PGML (som igjen var basert på PostScript og PDF) benyttet man konsepter rundt koordinatsystemet, transformasjoner, fargerom og tekst/skrifttyper. En av tingene som er interessant å legge merke til er at det ble tidlig bestemt at variabler som beskriver hvordan elementer oppfører seg ble kodet som XML-attributter, ikke som element-innhold. Dette gjør det enklere å tolke innholdet i et SVG-dokument for f.eks. søkemotorer og annen programvare som håndterer XML på et generelt nivå. XML-attributtene blir i en slik sammenheng ofte ignorert og man sitter igjen med tekst-innhold som beskriver det faktiske innholdet i dokumentet istedenfor formateringen. Siden SVG også støtter hyperlenking (både internt og eksternt) kan man lenke til andre dokumenter like enkelt som i HTML. Dette gjør formatet godt egnet til å formidle informasjon som kan konsumeres av både mennesker og maskiner på en enkel måte.</p>
<p>Tidlig i utviklingen av SVG-standarden var det W3Cs Chris Lilley og Adobes Jon Ferraiolo som var mest aktive. Som forrige avsnitt viser har Adobe sin aktivitet synket noe siden den gang.</p>
<h4 id="revisjonerogprofileravsvg-standarden"><a name="h-1.3.3.1"></a>1.3.1 Revisjoner og profiler av SVG-standarden</h4>
<p><a href="http://www.w3.org/TR/SVG10/" title="SVG 1.0 W3C Recommendation, W3C/Jon Ferraiolo, 2001-09-04">SVG 1.0</a><sup><a class="bib" href="#bib26">26</a></sup> ble en godkjent W3C standard 4. september 2001.</p>
<p>Forfatter-listen viser at følgende organisasjoner var involvert: Adobe, Apple, Autodesk, BitFlash, Canon, Corel, Excosoft, Hewlett-Packard, IBM, ILOG, IntraNet Solutions, Kodak, Lexica, Macromedia, Microsoft, Netscape, OASIS, Opera, Oxford Brookes University, Quark, RAL (CCLRC), Sun Microsystems, Visio, W3C og Xerox.</p>
<p><strong><a href="http://www.w3.org/TR/SVG11/" title="SVG 1.1 W3C Recommendation, W3C/Jon Ferraiolo/Fujisawa Jun/Dean Jackson, 2003-01-14">SVG 1.1</a><sup><a class="bib" href="#bib27">27</a></sup> ble en godkjent W3C standard 14. januar 2003.</strong></p>
<p>Forfatter-listen viser at følgende organisasjoner nå også er involvert i tillegg til de som nevnes for versjon 1.0: AGFA, America Online, Ericsson, Expway, Fuchsia Design, KDDI Research Labs, Nokia, Openwave, Savage Software, Schema Software, Sharp og Zoomon.</p>
<p>SVG 1.1 er først og fremst en ny versjon av standarden som modulariserer standarden, slik at forskjellige profiler av standarden nå kan implementeres. Dette baner vei for definisjon av subsettene SVG Tiny, Basic og Print.</p>
<p><strong><a href="http://www.w3.org/TR/SVGMobile/" title="Mobile SVG Profiles: SVG Tiny and SVG Basic W3C Recommendation, W3C/Tolga Capin, 2003-01-14">SVG Mobile (Basic og Tiny) 1.1</a><sup><a class="bib" href="#bib28">28</a></sup> ble en godkjent W3C standard 14. januar 2003</strong>, samtidig som SVG 1.1 ble godkjent.</p>
<p>SVG Tiny er et direkte subsett av SVG Basic som igjen er et direkte subsett av SVG 1.1. Dette gjør det enklere for utviklere å implementere løsninger som ikke trenger å støtte hele SVG 1.1, men bare de mindre tunge profilene SVG Basic eller SVG Tiny. SVG Tiny ble opprinnelig utviklet for mobil-telefoner og SVG Basic var beregnet på mobile håndholdte enheter (PDAer).</p>
<p>Forfatter-listen her viser flere interessante funn. Ikke alle som står oppført på forfatter-listen for SVG 1.1 er oppført på listen over forfattere for SVG Mobile. Dette kan bety at SVG-arbeidsgruppen har fordelt arbeidet med de forskjellige standardiseringsjobbene basert på deres interesseområde.</p>
<p>Følgende selskaper er ikke involvert i det hele tatt i SVG Mobile: Apple, Autodesk, Excosoft, IBM, Lexica, Macromedia, Microsoft, Netscape, Opera, Oxford Brookes University, RAL(CCLRC), Visio og Xerox.</p>
<p>Det som er overraskende med denne oversikten er at Apple og Opera ikke har involvert seg nok i arbeidet med den mobile SVG-standarden, selv om de helt klart er veldig fokusert på det mobile markedet. Det er mulig at både Apple og Opera har fokusert på SVG Full istedenfor Mobile-profilen fordi deres nettlesere faktisk prøver å støtte den fulle SVG-standarden uansett enhet nettleseren kjører på.</p>
<p><strong><a href="http://www.w3.org/TR/SVGTiny12/" title="SVG Tiny 1.2 W3C Recommendation, W3C, 2008-12-22">SVG Tiny 1.2</a><sup><a class="bib" href="#bib29">29</a></sup> ble en godkjent W3C standard 22. desember 2008.</strong></p>
<p>Forfatter-listen viser at enda flere organisasjoner har kommet til: France Telecom, Groupe des Ecoles des Télécommunications (GET), Motorola, OpenText, Quickoffice, Research in Motion (RIM), Samsung, SAP, Streamezzo, Telecom Italia og Vodafone.</p>
<p>I tillegg har flere organisasjoner utvidet antall personer de har involvert i arbeidsgruppen, noe som helt klart tyder på at standarden begynner å få større markedsandeler og blir benyttet mer. Det som er interessant å legge merke til er at de fleste nye organisasjonene er selskaper som leverer tjenester på mobile enheter eller utvikler mobile enheter.</p>
<p>SVG Tiny 1.2 foretok en endring i måten de forskjellige profilene i SVG-standarden påvirker hverandre. SVG Tiny 1.2 er definert som et subsett av SVG 1.1, men med ny funksjonalitet.</p>
<p><strong><a href="http://www.w3.org/TR/SVG12/" title="SVG Full 1.2 W3C Working Draft, W3C/Dean Jackson/Craig Northway, 2005-04-13">SVG Full 1.2</a><sup><a class="bib" href="#bib30">30</a></sup> er enda ikke godkjent som en W3C standard, men ble sist oppdatert 13. april 2005.</strong></p>
<p>SVG Full 1.2 er ment som den komplette videreføringen av SVG 1.1, som benytter SVG Tiny 1.2 som basis og utvider den standarden for å oppnå full støtte for SVG 1.1 pluss ny funksjonalitet.</p>
<p>Siden standarden enda ikke er godkjent er det uvisst hvilke organisasjoner som vil være involvert i den endelige versjonen av standarden.</p>
<p><strong><a href="http://www.w3.org/TR/SVGPrint12/" title="SVG Print 1.2 Part II: Language W3C Working Draft, W3C, 2007-12-21">SVG Print 1.2</a><sup><a class="bib" href="#bib31">31</a></sup> er enda ikke godkjent som en W3C standard, men ble sist oppdatert 21. desember 2007.</strong></p>
<p>SVG Print er en ment som en standard for utskrift av SVG-dokumenter. Et program som sier at det støtter SVG Print må teknisk sett støtte SVG Tiny 1.2 sin <a href="http://www.w3.org/TR/SVGMobile12/feature.html#SVG-static" title="SVG Tiny 1.2 Static Profile, W3C, 2008-12-22">statiske profil</a><sup><a class="bib" href="#bib32">32</a></sup>. SVG Print er således en utvidelse av det statiske subsettet av SVG Tiny 1.2.</p>
<p>Siden standarden enda ikke er godkjent er det uvisst hvilke organisasjoner som vil være involvert i den endelige versjonen av standarden. Fra oversikten over redaktører er det tydelig at Canon viser en stor interesse for dette arbeidet.</p>
<p>Det vedlagte dokumentet viser en <a href="1_introduction/svg_authors.pdf" title="Oversikt over forfattere av SVG-standarder, vedlegg 3, Robin Smidsrød, 2010-04-01">oversikt over alle forfatterne for de forskjellige revisjonene av SVG-standarden</a> fargekodet med når de involverte seg i arbeidsgruppen.</p>
<h3 id="hvordansersvgut"><a name="h-1.3.4"></a>1.4 Hvordan ser SVG ut?</h3>
<p>Som tidligere nevnt er SVG en applikasjon i XML. Det betyr at SVG dokumenter er beskrevet som XML-kode. For at programmer skal skjønne at man jobber med SVG og ikke en generisk form for XML må man sørge for å spesifisere et <a href="http://www.w3.org/TR/xml-names/" title="Namespaces in XML 1.0 (3rd Edition), W3C/Tim Bray/Dave Hollander/Andrew Layman/Richard Tobin/Henry S. Thompson, 2009-12-8">XML namespace</a><sup><a class="bib" href="#bib33">33</a></sup> som identifiserer SVG. SVG sitt namespace er definert som <code>http://www.w3.org/2000/svg</code> i <a href="http://www.w3.org/TR/SVG11/attindex.html" title="SVG 1.1 attribute index, W3C, 2003-01-14">SVG versjon 1.1</a><sup><a class="bib" href="#bib34">34</a></sup>. For at nettlesere og andre enheter som benytter HTTP skal kunne identifisere SVG uten å måtte dekode dokumentet bør man benytte mimetypen <code>image/svg+xml</code>, som er <a href="http://www.w3.org/TR/SVGTiny12/mimereg.html" title="SVG Tiny 1.2 mimetype registration, W3C, 2008-12-22">registrert</a><sup><a class="bib" href="#bib35">35</a></sup> hos IANA. Hvis XML-dokumentet innholder data fra forskjellige navnerom kan man benytte den mer generiske mimetypen <a href="http://tools.ietf.org/html/rfc3023#section-3.2" title="application/xml mimetype registration - XML Media Types, M. Murata/IBM/S. St. Laurent/simonstl.com/D. Kohn/Skymoon Ventures, 2001-01-XX"><code>application/xml</code></a><sup><a class="bib" href="#bib36">36</a></sup>. Tradisjonelt blir filer med SVG-data navngitt med .svg eller .svgz (for komprimert data) som <a href="http://www.w3.org/TR/SVG/intro.html#MIMEType" title="SVG mime type, file name extension, W3C, 2003-01-14">filendelse</a><sup><a class="bib" href="#bib37">37</a></sup>.</p>
<p>SVG inneholder et sett med primitiver som kan benyttes for å lage komplekse figurer i likhet med andre systemer for å tegne vektorisert grafikk. I tillegg støtter den også tekst og vanlig raster-grafikk (bitmaps). I første omgang skal vi se på hvilke primitiver som er tilgjengelig, senere kommer vi inn på bruken av tekst og rastergrafikk.</p>
<p>Følgende primitiver er <a href="http://www.w3.org/TR/SVG11/intro.html#TermShape" title="SVG 1.1 shape term, W3C, 2003-01-14">tilgjengelig</a><sup><a class="bib" href="#bib38">38</a></sup> (XML-element benyttet i SVG i parentes):</p>
<ul>
  <li>Linje (line)</li>
  <li>Sammenhengende linjer (polyline)</li>
  <li>Polygon (polygon)</li>
  <li>Rektangel (rect)</li>
  <li>Sti (path)</li>
  <li>Sirkel (circle)</li>
  <li>Ellipse (ellipse)</li>
</ul>
<p>Nedenfor vil vi gå gjennom hver enkelt primitiv i detalj. Som man kan se i eksemplene er det alltid et rot-element med navn <code>svg</code> som definerer synlig område (<a href="http://www.w3.org/TR/SVG11/struct.html#SVGElement" title="SVG 1.1 &lt;svg&gt; element, W3C, 2003-01-14">viewport</a><sup><a class="bib" href="#bib39">39</a></sup>) for hele tegneflaten. I tillegg er det her man definerer hvilken versjon av SVG-standarden man benytter, evt. hvilken SVG-profil man baserer seg på (<code>baseProfile</code>) samt navnerommet, som nevnt over. En ting som er verdt å merke seg er at ingen av eksemplene spesifiserer <code>width</code> eller <code>height</code>, noe som betyr at viewport skal være så stor som overhodet mulig (dvs. begge verdier har en standard-verdi på 100%).</p>
<h4 id="linje"><a name="h-1.3.4.1"></a>1.4.1 Linje</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#LineElement" title="SVG 1.1 &lt;line&gt; element, W3C, 2003-01-14">line-elementet</a><sup><a class="bib" href="#bib40">40</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 350 350&quot;&gt;
 &lt;line x1=&quot;0&quot; y1=&quot;0&quot; x2=&quot;300&quot; y2=&quot;300&quot;
  style=&quot;stroke: rgb(99,99,99); stroke-width: 2;&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/line.svg" height="200" id="lineexample" type="image/svg+xml" width="200">&lt;line&gt; example</object>
</p>
<p>Eksempelet viser en linje fra punkt 0,0 (øverst til venstre) til 300,300. Farge og tykkelse er spesifisert ved hjelp av CSS med attributtene <code>stroke</code> og <code>stroke-width</code>. Man bruker tradisjonell CSS-syntax innenfor style-attributtet, akkurat som i HTML/XHTML. Det man må være oppmerksom på er at attributtene ikke er de samme som i HTML. Se en oversikt over hvilke <a href="http://www.w3.org/TR/SVG11/styling.html" title="SVG 1.1 styling properties, W3C, 2003-01-14">CSS-attributter som er gyldige for SVG</a><sup><a class="bib" href="#bib41">41</a></sup>.</p>
<h4 id="sammenhengendelinjer"><a name="h-1.3.4.2"></a>1.4.2 Sammenhengende linjer</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#PolylineElement" title="SVG 1.1 &lt;polyline&gt; element, W3C, 2003-01-14">polyline-elementet</a><sup><a class="bib" href="#bib42">42</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 1200 1200&quot;&gt;
 &lt;polyline
  fill=&quot;none&quot;
  stroke=&quot;blue&quot;
  stroke-width=&quot;10&quot;
  points=&quot;  50,375
            150,375 150,325 250,325 250,375
            350,375 350,250 450,250 450,375
            550,375 550,175 650,175 650,375
            750,375 750,100 850,100 850,375
            950,375 950,25 1050,25 1050,375
            1150,375&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/polyline.svg" height="200" id="polylineexample" type="image/svg+xml" width="200">&lt;polyline&gt; example</object>
</p>
<p>I dette eksempelet ser vi en linje trukket gjennom et sett med punkter spesifisert med <code>points</code>-attributtet. Vær oppmerksom på at dersom man skal spesifisere desimaltall for koordinatene <em>må</em> man benytte punktum som desimalskille, ikke komma. Kommaet skiller mellom X- og Y-koordinatet mens et eller flere mellomrom skiller mellom koordinatene i listen. Det som også er verdt å legge merke til er at verdiene for å sette tykkelse og farge er her spesifisert med presentasjonsattributter istedenfor CSS-verdier via style-attributtet. Presentasjonsattributter har <a href="http://www.w3.org/TR/SVG11/styling.html#UsingPresentationAttributes" title="SVG 1.1 specifying properties using the presentation attributes, W3C, 2003-01-14">lavere rang</a><sup><a class="bib" href="#bib43">43</a></sup> enn CSS-verdier, så hvis begge deler er spesifisert får verdiene som er spesifisert i stilarket prioritet. Fordelen med å bruke stilark er de samme som i HTML, at man kan samle sammen utseende-definisjoner og gjenbruke de på mange elementer. Presentasjonsattributtene arver etter samme regler som i CSS2, men dokumentasjonen for attributtet forteller om det <a href="http://www.w3.org/TR/SVG11/styling.html#Inheritance" title="SVG 1.1 styling inheritance rules, W3C, 2003-01-14">støtter arv eller ikke</a><sup><a class="bib" href="#bib44">44</a></sup>. SVG-verktøy må ikke støtte CSS, så det er verdt å tenke på at dersom man ønsker et mest mulig kompatibelt dokument, bør man bruke presentasjonsattributter.</p>
<h4 id="polygon"><a name="h-1.3.4.3"></a>1.4.3 Polygon</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#PolygonElement" title="SVG 1.1 &lt;polygon&gt; element, W3C, 2003-01-14">polygon-elementet</a><sup><a class="bib" href="#bib45">45</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 350 350&quot;&gt;
 &lt;polygon points=&quot;220,100 300,210 170,250 123,234&quot;
  style=&quot;fill: #cccccc; stroke: #000000; stroke-width: 1;&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/polygon.svg" height="200" id="polygonexample" type="image/svg+xml" width="200">&lt;polygon&gt; example</object>
</p>
<p>På lik linje med <code>polyline</code> benytter man et attributt med navn <code>points</code> til å spesifisere hvilke punkter polygonet skal bestå av. I praksis er et polygon det samme som en polyline, men etter det siste koordinatet blir det tegnet en ekstra linje tilbake til første koordinat og hele elementet blir fylt med spesifisert fyll-farge. Legg merke til at fargene er her spesifisert med tradisjonelle hex-koder som i HTML.</p>
<h4 id="rektangel"><a name="h-1.3.4.4"></a>1.4.4 Rektangel</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#RectElement" title="SVG 1.1 &lt;rect&gt; element, W3C, 2003-01-14">rect-elementet</a><sup><a class="bib" href="#bib46">46</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 300 300&quot;&gt;
 &lt;rect x=&quot;20&quot; y=&quot;20&quot; rx=&quot;10&quot; ry=&quot;5&quot; width=&quot;250&quot; height=&quot;100&quot;
  style=&quot;fill: red; stroke: black; stroke-width: 5; opacity: 0.5;&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/rect.svg" height="200" id="rectexample" type="image/svg+xml" width="200">&lt;rect&gt; example</object>
</p>
<p>Et rektangel er spesifisert ved å sette <code>x</code>, <code>y</code>, <code>width</code> og <code>height</code> attributter som forventet. Attributtene <code>rx</code> og <code>ry</code> derimot krever litt mer forklaring. De gjør det mulig å få runde hjørner på rektangelet. Verdiene representerer radius i X- og Y-retning for sirkelen som benyttes for å tegne hjørnet. Dersom ingen av disse er spesifisert får man hjørner med en 90 graders vinkel. Det som er viktig å huske på er at negative verdier for rx/ry/width/height ikke er tillatt. I dette eksempelet ser man også bruk av de konstante navnene i CSS for farger, samt bruk av transparens med <code>opacity</code>-attributtet. I dette tilfellet er elementet 50% gjennomskinnelig.</p>
<h4 id="sti"><a name="h-1.3.4.5"></a>1.4.5 Sti</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/paths.html#PathElement" title="SVG 1.1 &lt;path&gt; element, W3C, 2003-01-14">path-elementet</a><sup><a class="bib" href="#bib47">47</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 400 400&quot;&gt;
 &lt;path d=&quot;M153 334
C153 334 151 334 151 334
C151 339 153 344 156 344
C164 344 171 339 171 334
C171 322 164 314 156 314
C142 314 131 322 131 334
C131 350 142 364 156 364
C175 364 191 350 191 334
C191 311 175 294 156 294
C131 294 111 311 111 334
C111 361 131 384 156 384
C186 384 211 361 211 334
C211 300 186 274 156 274&quot;
  style=&quot;fill: white; stroke: red; stroke-width: 2;&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/path.svg" height="200" id="pathexample" type="image/svg+xml" width="200">&lt;path&gt; example</object>
</p>
<p>I dette eksempelet ser man en spiral tegnet opp ved å bruke en rekke tegneoperasjoner etter hverandre presentert i et kompakt format. En <code>M</code> betyr moveto og setter utgangspunktet for tegneoperasjonen. En <code>C</code> betyr curveto og tegner en bézierkurve fra utgangspunktet gjennom to kontrollpunkter til destinasjonspunktet. Destinasjonspunktet blir da det nye utgangspunktet og tegneoperasjonen fortsetter. Det finnes flere <a href="http://www.w3.org/TR/SVG11/paths.html#PathData" title="SVG 1.1 path data, W3C, 2003-01-14">andre tegneoperasjoner</a><sup><a class="bib" href="#bib48">48</a></sup> man kan benytte til å tegne en sti som vi ikke omtaler her. Det som er interessant å legge merke til er at alle de andre primitivene vi har beskrevet her også kan tegnes ved hjelp av en sti.</p>
<h4 id="sirkel"><a name="h-1.3.4.6"></a>1.4.6 Sirkel</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#CircleElement" title="SVG 1.1 &lt;circle&gt; element, W3C, 2003-01-14">circle-elementet</a><sup><a class="bib" href="#bib49">49</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 200 200&quot;&gt;
 &lt;circle cx=&quot;50%&quot; cy=&quot;50%&quot;
         r=&quot;50&quot;
         stroke=&quot;black&quot; stroke-width=&quot;2&quot;
         fill=&quot;red&quot; /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/circle.svg" height="200" id="circleexample" type="image/svg+xml" width="200">&lt;circle&gt; example</object>
</p>
<p>Dette er et ganske enkelt eksempel som viser en sirkel plassert i senter av viewport med en radius på 50 punkter. Bruken av prosent-anvisninger følger samme tankegang som HTML sin boksmodell ved at tallet blir evaluert i forhold til størrelsen på forelder-elementet.</p>
<h4 id="ellipse"><a name="h-1.3.4.7"></a>1.4.7 Ellipse</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/shapes.html#EllipseElement" title="SVG 1.1 &lt;ellipse&gt; element, W3C, 2003-01-14">ellipse-elementet</a><sup><a class="bib" href="#bib50">50</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 200 200&quot;&gt;
 &lt;ellipse cx=&quot;50%&quot; cy=&quot;50%&quot; rx=&quot;50%&quot; ry=&quot;25%&quot;
  style=&quot;fill: rgb(200,100,50); stroke: rgb(0,0,100); stroke-width: 2;&quot;
 /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/ellipse.svg" height="200" id="ellipseexample" type="image/svg+xml" width="200">&lt;ellipse&gt; example</object>
</p>
<p>På lik linje med sirkelen spesifiserer <code>cx</code> og <code>cy</code> senterpunktet for tegneoperasjonen. Men det som er spesielt med en ellipse er at radius i X- og Y-retningen er forskjellige (i motsetning til sirkelen hvor radius er identisk i X- og Y-retningen). Man må derfor spesifisere både <code>rx</code> og <code>ry</code> for å tegne ellipsen. Radius kan heller ikke her være negativ, på lik linje med rektangelet.</p>
<h4 id="tekst"><a name="h-1.3.4.8"></a>1.4.8 Tekst</h4>
<p>Under kan man se et eksempel på <a href="http://www.w3.org/TR/SVG11/text.html#TextElement" title="SVG 1.1 &lt;text&gt; element, W3C, 2003-01-14">text-elementet</a><sup><a class="bib" href="#bib51">51</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 300 300&quot;&gt;
 &lt;text x=&quot;10&quot; y=&quot;20&quot; style=&quot;font-family:sans-serif;font-size:24&quot;
  &gt;Stationary text&lt;/text&gt;
 &lt;text x=&quot;10&quot; y=&quot;40&quot; style=&quot;font-family:serif;font-size:24&quot;&gt;Moving text
  &lt;animateMotion path=&quot;M 10 40 L 200 40&quot; dur=&quot;0.5s&quot; fill=&quot;freeze&quot; /&gt;
 &lt;/text&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/text.svg" height="200" id="textexample" type="image/svg+xml" width="200">&lt;text&gt; example</object>
</p>
<p>Eksempelet viser først en tekst-streng plassert tett opp til venstre kant og toppen av tegneområdet. Det er valgt en generisk sans-serif skrifttype i en passende størrelse. Den neste tekst-strengen er plassert 20 piksler lenger nede på skjermen og benytter en serif skrifttype. I tillegg er det spesifisert at selve teksten skal animeres fra utgangspunktet til X-posisjon 200 i løpet av 0.5s. Parameteret <em>freeze</em> til fill-attributtet betyr at det animerte elementet skal bli <a href="http://www.w3.org/TR/SVG11/animate.html#TimingAttributes" title="SVG 1.1 animation timing attributes, W3C, 2003-01-14">stående i sluttposisjonen</a><sup><a class="bib" href="#bib52">52</a></sup> når animasjonen er ferdig. Vanligvis flytter elementet som er animert seg tilbake til utgangsposisjonen etter fullført animasjon (fill=&quot;remove&quot;). Igjen ser vi bruk av en enkel sti-spesifikasjon for å beskrive bevegelsen i animasjonen.</p>
<h4 id="filter"><a name="h-1.3.4.9"></a>1.4.9 Filter</h4>
<p>Under kan man se et eksempel på bruk av <a href="http://www.w3.org/TR/SVG11/filters.html" title="SVG 1.1 filter effects, W3C, 2003-01-14">filtre</a><sup><a class="bib" href="#bib53">53</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
             xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;
     viewBox=&quot;0 0 300 300&quot;&gt;
 &lt;defs&gt;
  &lt;filter id=&quot;shadow&quot;&gt;
   &lt;feGaussianBlur in=&quot;SourceGraphic&quot; stdDeviation=&quot;2&quot; result=&quot;blur&quot; /&gt;
   &lt;feOffset in=&quot;blur&quot; dx=&quot;3&quot; dy=&quot;3&quot; /&gt;
  &lt;/filter&gt;
  &lt;text id=&quot;text&quot;
   x=&quot;10%&quot; y=&quot;10%&quot;
   font-family=&quot;sans-serif&quot; font-size=&quot;150%&quot;
   &gt;Text with drop shadow
  &lt;/text&gt;
 &lt;/defs&gt;
 &lt;use xlink:href=&quot;#text&quot; filter=&quot;url(#shadow)&quot; stroke=&quot;grey&quot; /&gt;
 &lt;use xlink:href=&quot;#text&quot; stroke=&quot;black&quot; /&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/filter.svg" height="200" id="filterexample" type="image/svg+xml" width="200">filter example</object>
</p>
<p>Eksempelet viser flere avanserte metoder i SVG for gjenbruk av definisjoner uten behov for duplisering. La oss gå gjennom hver del steg for steg.</p>
<p>Det første man legger merke til er at det er lagt til navnerommet for <a href="http://www.w3.org/TR/xlink/" title="XML Linking Language 1.0 W3C Recommendation, W3C/Steve DeRose/Eve Maler/David Orchard, 2001-06-27">XLink</a><sup><a class="bib" href="#bib54">54</a></sup>, noe som gjør det mulig å referere til andre elementer ved hjelp av URI-referanser. Selv om URI-referansene er interne må man benytte xlink:href-attributtet for å peke til ressursene.</p>
<p>Det neste vi legger merke til er <a href="http://www.w3.org/TR/SVG11/struct.html#DefsElement" title="SVG 1.1 &lt;defs&gt; element, W3C, 2003-01-14"><code>&lt;defs&gt;</code>-elementet</a><sup><a class="bib" href="#bib55">55</a></sup>. Dette er et samlingselement for andre elementer, på lik linje med <code>&lt;g&gt;</code>-elementet. Det som er spesielt med <code>defs</code> er at alle definisjonene innenfor elementet ikke blir tegnet opp umiddelbart. Men siden de kan refereres til senere i dokumentet gjør det gjenbruk kjapt og enkelt å få til. Hvis vi hopper over de faktiske definisjonene kan vi se at begge <a href="http://www.w3.org/TR/SVG11/struct.html#UseElement" title="SVG 1.1 &lt;use&gt; element, W3C, 2003-01-14"><code>&lt;use&gt;</code>-elementene</a><sup><a class="bib" href="#bib56">56</a></sup> henviser til et internt element med id=&quot;text&quot;.</p>
<p>Hvis vi tar en kikk på <code>&lt;text&gt;</code>-elementet innenfor definisjonen ovenfor finner vi igjen det refererte id-attributtet. Tekst-elementet blir her tegnet opp to ganger, først en gang med en grå tegnefarge, og deretter med en sort tegnefarge. Man kan også se at den grå teksten har et filter aktivert. Hvis ikke filteret hadde vært benyttet ville den sorte teksten tegnet rett over den grå teksten som da ikke ville blitt synlig. Men siden filteret er aktivert påvirker det den grå teksten før den tegnes ut. Det er verdt å legge merke til at href-definisjonen benytter lenkesyntaks fra HTML sitt <code>&lt;a&gt;</code>-element, mens filter-attributtet benytter CSS-syntaks for å referere til en ressurs.</p>
<p>Hvis vi nå tar en kikk på <code>&lt;filter&gt;</code>-elementet innenfor definisjonsblokken ser vi at filteret består av en <a href="http://www.w3.org/TR/SVG11/filters.html#feGaussianBlur" title="SVG 1.1 &lt;feGaussianBlur&gt; filter effect, W3C, 2003-01-14">gaussian blur-effekt</a><sup><a class="bib" href="#bib57">57</a></sup> pluss en <a href="http://www.w3.org/TR/SVG11/filters.html#feOffset" title="SVG 1.1 &lt;feOffset&gt; filter effect, W3C, 2003-01-14">offset-effekt</a><sup><a class="bib" href="#bib58">58</a></sup>. Blur-effekten bruker kildegrafikken, utfører en blur-operasjon på størrelse 2 og lagrer resultatet i en midlertidig buffer som navngis <strong>blur</strong>. Offset-effekten benytter da denne midlertidige bufferen som kilde og flytter x- og y-posisjon med 3 piksler. Dette fører da til at en skygge tegnes i grått først, og sort tekst tegnes over skyggen avslutningsvis.</p>
<h4 id="animasjon"><a name="h-1.3.4.10"></a>1.4.10 Animasjon</h4>
<p>Under kan man se et eksempel på bruk av <a href="http://www.w3.org/TR/SVG11/animate.html" title="SVG 1.1 animation elements, W3C, 2003-01-14">animasjon</a><sup><a class="bib" href="#bib59">59</a></sup> i SVG.</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
     viewBox=&quot;0 0 300 300&quot;&gt;
 &lt;rect
  x=&quot;20&quot; y=&quot;20&quot;
  rx=&quot;0&quot; ry=&quot;0&quot;
  width=&quot;250&quot; height=&quot;100&quot;
  fill=&quot;red&quot;
  stroke=&quot;black&quot; stroke-width=&quot;5&quot;&gt;
  &lt;animateColor attributeName=&quot;fill&quot; attributeType=&quot;XML&quot;
   from=&quot;red&quot; to=&quot;yellow&quot;
   dur=&quot;2s&quot;
   fill=&quot;freeze&quot;
  /&gt;
  &lt;animate attributeName=&quot;rx&quot; attributeType=&quot;XML&quot;
   from=&quot;0&quot; to=&quot;10&quot;
   begin=&quot;2s&quot; dur=&quot;2s&quot;
   fill=&quot;freeze&quot;
  /&gt;
  &lt;animate attributeName=&quot;ry&quot; attributeType=&quot;XML&quot;
   from=&quot;0&quot; to=&quot;10&quot;
   begin=&quot;2s&quot; dur=&quot;2s&quot;
   fill=&quot;freeze&quot;
  /&gt;
 &lt;/rect&gt;
&lt;/svg&gt;
</code></pre>
<p>
  <object data="1_introduction/animation.svg" height="200" id="animationexample" type="image/svg+xml" width="200">animation example</object>
</p>
<p>Eksempelet viser et rektangel som omtalt før, men denne gangen med et sett med animasjonsregler som påvirker fyll-fargen og avrundingen i hjørnene. Attributtet <strong>attributeName</strong> spesifiserer hvilket attributt på det omsluttende elementet som skal animeres, og attributtet <strong>attributeType</strong> spesifiserer om det er et XML-attributt eller et CSS-attributt som skal animeres. I vårt eksempel animerer vi kun XML-attributter. Først spesifiserer vi at fyll-fargen skal endres fra rød til gul over en tidsperiode på 2 sekunder. Når farge-endringen er ferdig skal den bli stående fordi vi benytter fill=&quot;freeze&quot;. Deretter har vi to identiske regler som forteller at rx og ry-attributtene (hjørneradius) skal endres fra verdien 0 (skarp) til verdien 10 (avrundet) over en periode på 2 sekunder, men man skal vente 2 sekunder før man starter endringen. I dette tilfellet skal endringen bli stående igjen etter at animasjonen er ferdig.</p>
<h3 id="programvaresomkanproduseresvg-dokumenter"><a name="h-1.3.5"></a>1.5 Programvare som kan produsere SVG-dokumenter</h3>
<p>Det finnes en <a href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Software_and_support_in_applications" title="SVG support in applications, Wikipedia, 2010-03-26">god del programvare</a><sup><a class="bib" href="#bib60">60</a></sup> på markedet som allerede støtter SVG-standarden til en varierende grad. Under har vi klassifisert de mest populære verktøyene på markedet som faktisk kan brukes til å produsere SVG-dokumenter.</p>
<h4 id="kommersiellprogramvare"><a name="h-1.3.5.1"></a>1.5.1 Kommersiell programvare</h4>
<p><a href="http://office.microsoft.com/en-us/visio/FX100487861033.aspx" title="Microsoft Office Visio 2007 front page, Microsoft, lest 2010-04-04">Microsoft Visio</a><sup><a class="bib" href="#bib61">61</a></sup> er et verktøy for å lage varierte vektoriserte diagrammer. Visio beskriver ikke på sine nettsider eksplisitt at de støtter SVG som et eksport-format, men en <a href="http://www.svgopen.org/2003/papers/SVG_Scenarios_using_Microsoft_Office_Visio_2003/index.html" title="SVG Scenarios for Microsoft Visio 2003, Richard See, 2003">omfattende artikkel</a><sup><a class="bib" href="#bib62">62</a></sup> beskriver hvordan Visio kan benyttes i en arbeidsflyt som involverer bruk av SVG. Avsnitt 3.3 i artikkelen forteller også om noen av begrensningene med å importere SVG-dokumenter inn i Visio, f.eks. det at text og tspan-elementer i SVG ikke eksplisitt gir opplysninger om teksten faktisk inneholder linjeskift eller om teksten har blitt foldet fordi linjene er for lange. Det er en del andre deler av SVG-standarden som ikke er støttet, men alt i alt er støtten overraskende god.</p>
<p><a href="http://www.adobe.com/products/illustrator/" title="Adobe Illustrator graphic design software, Adobe, lest 2010-04-04">Adobe Illustrator</a><sup><a class="bib" href="#bib63">63</a></sup> er et av verdens mest kjente verktøy for grafiske designere. Illustrator har støttet SVG siden versjon 9 og fikk også utvidet støtte for SVG Tiny i CS2 (versjon 12) i følge Wikipedia. Illustrator CS2 og senere <a href="http://www.adobe.com/svg/tools.html" title="Adobe SVG Authoring Tools, Adobe, lest 2010-04-04">støtter flere avanserte funksjonaliteter</a><sup><a class="bib" href="#bib64">64</a></sup> i SVG, deriblant filtere, interaktivitet, rik typografi, hyperlenking og mer.</p>
<p><a href="http://www.corel.com/servlet/Satellite/us/en/Product/1191272117978" title="CorelDRAW Graphics Suite X5, Corel, lest 2010-04-04">CorelDRAW</a><sup><a class="bib" href="#bib65">65</a></sup> er et designer-verktøy på lik linje med Adobe Illustrator. CorelDRAW har <a href="http://www.unleash.com/davidt/svg/index.asp" title="SVG - From CorelDRAW to Your Browser, David Troidl, 2007">støttet SVG siden versjon 10</a><sup><a class="bib" href="#bib66">66</a></sup>, som ble lansert i 2000. De fleste statiske finessene i SVG er <a href="http://corel.custhelp.com/app/answers/detail/a_id/754171/" title="CorelDRAW SVG support information - Corel Knowledgebase, Corel, lest 2010-04-04">godt støttet</a><sup><a class="bib" href="#bib67">67</a></sup> i versjon 12. En ting som er verdt å legge merke til er at skygger faktisk blir gjort om til rastergrafikk istedenfor å benytte f.eks. blur-filter samt et offset-filter som vist i forrige avsnitt (se rubrikken ang. filtere). Det er ikke klart hvorfor de velger å benytte denne metoden på skygger.</p>
<p><a href="http://www.xara.com/us/products/xtreme/" title="Xara Xtreme graphics software, Xara Group Limited, lest 2010-04-04">Xara Xtreme</a><sup><a class="bib" href="#bib68">68</a></sup> er på lik linje med Illustrator og CorelDRAW et verktøy for grafiske designere. Xara Xtreme har hatt <a href="http://support.xara.com/index.php?_m=knowledgebase&amp;_a=viewarticle&amp;kbarticleid=2562" title="Xara Xtreme SVG support - Xara knowledgebase, Xara Group Limited, 2007-06-13">støtte for eksport av SVG-dokumenter siden versjon 3.2</a><sup><a class="bib" href="#bib69">69</a></sup>. Xara bekrefter at støtten for SVG ikke er komplett, men at de jobber med å forbedre støtten fortløpende.</p>
<h4 id="friprogramvare"><a name="h-1.3.5.2"></a>1.5.2 Fri programvare</h4>
<p><a href="http://www.openoffice.org/product/draw.html" title="OpenOffice.org Draw, Oracle/Sun, lest 2010-04-04">OpenOffice.org Draw</a><sup><a class="bib" href="#bib70">70</a></sup> er et tegneprogram som er en del av den større OpenOffice.org-pakken (OOo) for produktivitet. <a href="http://graphics.openoffice.org/files/documents/12/406/svg_overview.htm" title="OpenOffice.org Graphics SVG integration improvement proposal, Vincent Hardy/Kai Ahrens, 2002-07-01">Følgende dokument</a><sup><a class="bib" href="#bib71">71</a></sup> bekrefter at OOo Draw har hatt grunnleggende støtte for eksport av SVG-dokumenter siden 2002. Det som er interessant å legge merke til i dette dokumentet er at OOo baserer seg sterkt på Batik SVG Toolkit (omtales under) for håndtering av SVG. Siden Batik har en av de mest komplette implementasjonene av SVG-standarden bør OOo Draw sin støtte være ganske god.</p>
<p><a href="http://www.inkscape.org/" title="Inkscape vector graphics editor, lest 2010-04-04">Inkscape</a><sup><a class="bib" href="#bib72">72</a></sup> er et vektorbasert tegneprogram på lik linje med Illustrator, CorelDRAW og Xara Xtreme. Det som er spesielt med Inkscape er at det benytter SVG som standard filformat for lagring av vektorisert grafikk. Inkscape har ikke noe proprietært filformat. Inkscape <a href="http://wiki.inkscape.org/wiki/index.php/FAQ#What_SVG_features_does_Inkscape_implement.3F" title="Inkscape SVG support, Inkscape Wiki, 2010-02-12">støtter majoriteten av SVG 1.1</a><sup><a class="bib" href="#bib73">73</a></sup>, med unntak av animasjon og noen filtre.</p>
<p><a href="http://www.scribus.net/" title="Scribus Open Source Desktop Publishing, lest 2010-04-04">Scribus</a><sup><a class="bib" href="#bib74">74</a></sup> er en programvare for produksjon av side-oppsett (DTP), på lik linje med f.eks. det kommersielle Quark Express. Scribus sin <a href="http://docs.scribus.net/index.php?lang=en&amp;page=scribus-svg" title="Scribus SVG support, Scribus documentation, lest 2010-04-04">støtte for SVG</a><sup><a class="bib" href="#bib75">75</a></sup> er relativt grunnleggende. De forteller at de ikke støtter tekst-elementer fullt ut enda, samt at graderinger, innebygde bilder og masking/clipping også ikke er støttet. Derimot bekrefter de at nesten alle funksjoner i et Scribus-dokument kan eksporteres til SVG med stort hell. Det er stort sett import av SVG som er problematisk.</p>
<h4 id="verktyforutviklere"><a name="h-1.3.5.3"></a>1.5.3 Verktøy for utviklere</h4>
<p><a href="http://xmlgraphics.apache.org/batik/" title="Batik Java SVG Toolkit, Apache Software Foundation, 2010-01-02">Batik SVG Toolkit</a><sup><a class="bib" href="#bib76">76</a></sup> er et bibliotek for Java-utviklere som kan benyttes til å manipulere, produsere og presentere SVG. Versjon 1.7 av Batik støtter den statiske profilen til SVG 1.1 uten mangler, samt at den også støtter en god del av den deklarative spesifikasjonen for animasjon (SMIL).</p>
<p><a href="http://cairographics.org/" title="Cairo 2D graphics library, 2010-03-02">Cairo</a><sup><a class="bib" href="#bib77">77</a></sup> er et 2D grafikk-bibliotek for utviklere. I tillegg til å kunne presentere vektorgrafikk på interaktive flater som X11, Win32 og Quartz, kan den også generere SVG-dokumenter av tegne-operasjonene. Cairo er et C-bibliotek med bindinger til mange programmeringsspråk, bl.a. PHP, Python, Perl, Ruby, Lisp, Java, C++, .NET, med mer. Cairo benyttes av blant annet <a href="https://wiki.mozilla.org/Gecko_1.9_Roadmap#cairo_Graphics_Substrate" title="Cairo usage in Mozilla Gecko, Mozilla wiki, 2007-01-10">Gecko</a><sup><a class="bib" href="#bib78">78</a></sup> for fremvisning av SVG i Mozilla-baserte nettlesere, samt at den benyttes av WebKit-motoren, som danner grunnlaget for nettleserne Safari og Chrome.</p>
<p><a href="http://processing.org/about/" title="Processing programming language, Ben Fry/Casey Reas, lest 2010-04-04">Processing</a><sup><a class="bib" href="#bib79">79</a></sup> er et programmeringsspråk som fokuserer på å lære programvareutvikling ved hjelp av en visuell kontekst. Verktøyet kommer med en integrert IDE som gjør det enkelt å komme i gang med programmeringen og umiddelbart se resultater. Processing er faktisk Java på bunnen, og benytter seg av den spesialiserte klassen <a href="http://dev.processing.org/reference/core/javadoc/processing/core/PApplet.html" title="PApplet class definition, Processing Project, lest 2010-04-04">PApplet</a><sup><a class="bib" href="#bib80">80</a></sup> som implementerer mesteparten av språket. Processing har <a href="http://processing.org/reference/libraries/candy/SVG.html" title="Processing SVG support, Processing Project, 2008-09-22">innebygd støtte for SVG</a><sup><a class="bib" href="#bib81">81</a></sup>, noe som gjør det enkelt å inkludere avansert vektorgrafikk i et Processing-prosjekt. SVG-støtten er relativt <a href="http://dev.processing.org/reference/core/javadoc/processing/core/PShapeSVG.html" title="PShapeSVG class definition, Processing Project, lest 2010-04-04">grunnleggende</a><sup><a class="bib" href="#bib82">82</a></sup>, det er kun mulig å laste inn enkle primitiver. Fordelen med dette er at det ikke øker størrelsen på klasse-filen som må distribueres altfor mye. Hvis man derimot trenger avansert SVG-støtte kan man benytte Batik-biblioteket som nevnt ovenfor.</p>
<h2><a name="h-1.4"></a>2 Støtte for SVG i populære nettlesere</h2>
<h3 id="kortomnettlesereogsvg-sttte"><a name="h-1.4.1"></a>2.1 Kort om nettlesere og SVG-støtte</h3>
<p>SVG er en standard som for lengst har blitt implementert i de fleste populære nettlesere som blir brukt av verdens befolkning. Det er heller et spørsmål om hvor mye av standarden som fungerer i de ulike nettleserne. Dette variere en god del fra nettleser til nettleser og en årsak til at SVG ikke er tatt i bruk aktivt er nok at man ikke kan garantere for at resultatet blir som forventet i de ulike nettleserne.</p>
<p>Internet Explorer har en lengre vei å gå enn andre for å implementere SVG, noe som kan ha en innvirkning på hvor mange utviklere og brukere SVG har. Internet Explorer har ingen innebygget støtte for SVG, men SVG støtte kan oppnås ved å benytte en plugin utviklet av andre aktører. Adobe har f.eks lenge utviklet en <a href="http://www.adobe.com/svg/viewer/install/" title="Adobe SVG Viewer IE Plugin install page, Adobe">SVG-viewer</a><sup><a class="bib" href="#bib83">83</a></sup>, som gir Internet Explorer mulighet til å vise nesten alle elementene i standarden. Apache har også gjort en innsats for å utvikle en <a href="http://xmlgraphics.apache.org/batik/" title="Batik Java SVG Toolkit, Apache Software Foundation, 2010-01-02">plugin</a><sup><a class="bib" href="#bib76">76</a></sup> som Internet Explorer kan benytte. Denne kan også benyttes av andre applikasjoner som skulle ha behov for SVG-støtte. </p>
<p>Flere av de andre populære nettleserne har gjort en implementasjon av SVG-standarden men ingen har kommet til det punktet at all funksjonalitet er støttet hundre fullt ut. Både Mozilla Firefox, Google Chrome, Apple Safari og Opera har alle prøvd å implementere SVG. Noen av dem har lykkes i større grad enn andre, men alle har begynt på en vei vi ser frem til å følge videre. SVG gjør det mulig for nettlesere å utføre avanserte aninimasjonsoppgaver, samt å generere egne teksttyper relativt enkelt. Dette vil sannsynligvis få stor betydning for hvordan vi utvikler websider i fremtiden. </p>
<p>Jeff Schiller, som er en aktiv deltaker i <a href="http://www.w3.org/Graphics/SVG/IG/" title="SVG Interest Group, W3C">SVGIG</a><sup><a class="bib" href="#bib84">84</a></sup> eller SVG interest group, har laget en oversikt, <a href="http://www.codedread.com/svg-support-table.html" title="SVG Support in browsers, Jeff Schiller, uthentet 2010-03-14">tilgjenglig på nett</a><sup><a class="bib" href="#bib85">85</a></sup>, over hvilke deler av SVG-implementasjon som er tilgjenglig i de ulike nettleserne. Det er en oversikt som tar for seg både nettlesere og andre applikasjoner som implementerer SVG-standarden. Vår oppgave tar ikke utgangspunkt i de andre applikasjonene som er spesifisert her, men kun nettlesere som er relevante og i bruk pr i dag. Det finnes gode statistikker på nettet over hvilke nettlesere som er relevante for tiden, blant annet <a href="http://gs.statcounter.com/#browser_version-ww-monthly-200902-201003-bar" title="StatCounter Global Stats, Browser version, February 2009 to March 2010">Statcounter</a><sup><a class="bib" href="#bib86">86</a></sup> som gir en veldig god oversikt. Ut ifra denne oversikten kom vi frem til følgende nettlesere som skal vurderes opp mot SVG-standarden.</p>
<ul>
  <li>Microsoft Internet Explorer 7 / 8</li>
  <li>Mozilla Firefox 2.0 / 3.0 / 3.5 / 3.6</li>
  <li>Google Chrome 2(Nightly-build) / 4</li>
  <li>Opera 9.6(9.5 er nærmeste) / 10.0</li>
  <li>Apple Safari 4</li>
</ul>
<p>Alle nettlesere er godt representert på internett i dag, og kjent av internettbrukere i hele verden.</p>
<p>På informasjonssiden om <a href="http://www.codedread.com/svg-support-table.html" title="SVG Support in browsers, Jeff Schiller, uthentet 2010-03-14">SVG-status</a><sup><a class="bib" href="#bib85">85</a></sup> i de ulike nettlesere er det angitt en prosent andel som forteller hvor mange prosent av standarden som er støttet. Det er interessant at nettlesere som har SVG-standarden innbygget i nettlesermotoren, som f.eks Mozilla har gjort med Gecko og Safari har gjort med Webkit, kommer dårligere ut av denne testen i motsetning til Opera som har laget sin egen nettlesermotor og bygget SVG-standarden inn i denne.</p>
<ul>
  <li>Microsoft Internet Explorer 0.00% / 0.00%</li>
  <li>Mozilla Firefox 46.17% / 60.40% / 60.77% / 61.50%</li>
  <li>Google Chrome 81.39% / 82.12%</li>
  <li>Opera 94.16% / 94.34%</li>
  <li>Apple Safari 82.12%</li>
</ul>
<p>Ut i fra prosentfordelingen over kan man legge merke til at både Chrome 4 og Safari 4 har samme prosentfordeling, noe som er rimlig ettersom begge er basert på Webkit sin implementasjon av SVG. Firefox kommer dårlig ut i prosentfordeling, selv om det er en av de mest brukte nettleserne etter Internet Explorer. Internet Explorer har ikke innebygget støtte for SVG i det hele tatt.</p>
<h3 id="dekningsgradiimplementasjonene"><a name="h-1.4.2"></a>2.2 Dekningsgrad i implementasjonene</h3>
<p>Mozilla Firefox har fått SVG-standarden bygd direkte inn i nettleseren. Mozilla har en egen prosjektgruppe som jobber med SVG implementasjonen i Firefox. Det er blitt opprettet en <a href="http://www.mozilla.org/projects/svg/status.html" title="Mozilla SVG Status, Mozilla, lest xxx">statusside</a><sup><a class="bib" href="#bib87">87</a></sup> hvor det ligger en oversikt over funksjonalitet som pr idag er implementert. Det er enkelt å legge merke til at flere moduler har deler som enda ikke er støttet. For å kunne sammenligne Mozilla sin SVG-implementasjon men andre nettlesere, skal vi trekke ut moduler som ikke er støttet av Mozilla og sammenligne disse mot andre nettlesere.</p>
<p>Moduler vi spesielt bør legge spesielt merke til:</p>
<ul>
  <li><a href="http://www.w3.org/TR/SVG11/text.html" title="Text - SVG 1.1, W3C, 2003-01-14">Text</a><sup><a class="bib" href="#bib88">88</a></sup></li>
  <li><a href="http://www.w3.org/TR/SVG11/color.html" title="Color - SVG 1.1, W3C, 2003-01-14">Color-profile</a><sup><a class="bib" href="#bib89">89</a></sup></li>
  <li><a href="http://www.w3.org/TR/SVG11/interact.html" title="Interact - SVG 1.1, W3C, 2003-01-14">Cursor</a><sup><a class="bib" href="#bib90">90</a></sup></li>
  <li><a href="http://www.w3.org/TR/SVG11/linking.html" title="Linking - SVG 1.1, W3C, 2003-01-14">View</a><sup><a class="bib" href="#bib91">91</a></sup></li>
  <li><a href="http://www.w3.org/TR/SVG11/animate.html" title="Animate - SVG 1.1, W3C, 2003-01-14">Animation</a><sup><a class="bib" href="#bib59">59</a></sup></li>
  <li><a href="http://www.w3.org/TR/SVG11/fonts.html" title="Fonts - SVG 1.1, W3C, 2003-01-14">Font</a><sup><a class="bib" href="#bib92">92</a></sup></li>
</ul>
<p>Utfra <a href="http://www.mozilla.org/projects/svg/status.html" title="Mozilla SVG Status, Mozilla, lest xxx">statussidene</a><sup><a class="bib" href="#bib87">87</a></sup> kan vi konkludere med at SVG-implementasjonen i Mozilla har et stykke igjen før alt fungerer. Vi ser blant annet at støtten for symboler, som f.eks i japanske tegn er dårlig. Disse er ikke implementert i <a href="http://www.w3.org/TR/SVG11/text.html" title="Text - SVG 1.1, W3C, 2003-01-14">tekst</a><sup><a class="bib" href="#bib88">88</a></sup> modulen i Mozillas implementasjon av SVG. Det er heller ikke mulig å spesifisere eget utseende på pekeren i gjennom <a href="http://www.w3.org/TR/SVG11/interact.html" title="Interact - SVG 1.1, W3C, 2003-01-14">cursor</a><sup><a class="bib" href="#bib90">90</a></sup> modulen. Funksjonalitet nevnt over er ikke det viktigste som SVG-standarden implementer, derimot har vi <a href="http://www.w3.org/TR/SVG11/animate.html" title="Animate - SVG 1.1, W3C, 2003-01-14">animasjon</a><sup><a class="bib" href="#bib59">59</a></sup> og <a href="http://www.w3.org/TR/SVG11/fonts.html" title="Fonts - SVG 1.1, W3C, 2003-01-14">font</a><sup><a class="bib" href="#bib92">92</a></sup> som burde være veldig relevante i forhold til å bruke SVG aktivt i utvikling. Alle funksjoner under disse modulene er enten ikke implementert eller inneholder bugs. Noe av det som faktisk er flott med SVG er det å enkelt kunne lage animasjoner på nett.</p>
<p>Opera har en av de bedre implementasjonene av SVG-standarden. Det ble også gjort en <a href="http://www.codedread.com/svg-support-table.html">undersøkelse</a><sup><a class="bib" href="#bib85">85</a></sup> av Jeff Schiller, hvor han benyttet en testpakke fra W3C for å gradere støtten for SVG i de ulike nettleserne. Det er fortsatt moduler som mangler i Opera også, som det gjør i Mozilla. Vi kan se ut fra <a href="http://www.opera.com/docs/specs/svg/" title="SVG support in Opera 9, Opera, lest xxx">statussidene</a><sup><a class="bib" href="#bib93">93</a></sup> til Opera, at mye av den samme funksjonaliteten som manglet i Mozillas implementasjon heller ikke eksisterer her. Det står blant annet definert på disse sidene at SVG-implementasjon i Opera ikke støtter video eller lyd. Det er heller ikke støtte for symboler i fonter eller f.eks japansk skriftspråk.</p>
<p>Støtte for lyd og video skal etter hvert bli integrert direkte i nettleseren ut fra hva man kan lese om Operas <a href="http://www.opera.com/docs/specs/presto25/html5/" title="Opera: HTML5 elements attributes and APIs support in Opera Presto 2.5, Opera, lest xxx">arbeid</a><sup><a class="bib" href="#bib94">94</a></sup> med nettleseren. Dette vil da komme i sammenheng med HTML5 som vil gjøre multimedia i nettlesere enklere. Da er det nok naturlig å anta at det ikke er prioritert å implementer video eller lyd i SVG, ettersom man uansett vil få tilgang til dette gjennom HTML5 når det blir tilgjenglig.</p>
<p>Mozilla Firefox baserer seg på <a href="https://developer.mozilla.org/en/Gecko" title="Gecko - MDC, Mozilla, 2010-03-12">Gecko</a><sup><a class="bib" href="#bib95">95</a></sup>, som er en motor for å vise bilde og tekst i nettleseren. Implementasjonen av SVG ble derfor gjort opp mot denne motoren. Opera derimot har laget sin helt egen implementasjon, siden denne ikke baserer seg på noen separat motor. Alt er altså bygd for å kun fungere mot Opera. </p>
<p>Chrome, som er Google sin nettlesere og relativt ny på markedet, og Safari, Apple sin nettlesere som følger med OSX, baserer seg derimot på <a href="http://webkit.org/" title="The Webkit Open Source Project, Webkit, lest xxx">Webkit</a><sup><a class="bib" href="#bib96">96</a></sup>. Webkit kan sammenlignes med Gecko motoren som Mozilla Firefox benytter, og er grunnstenen i nettleseren. Implementasjon av SVG er derfor gjort i Webkit. Vi vurderer derfor Webkit, ikke Chrome og Safari hver for seg.</p>
<p>Webkit har mange likheter med blant annet Mozilla, men ut fra <a href="http://webkit.org/projects/svg/status.xml" title="WebKit SVG Status, Webkit, 2010-01-05">statussidene</a><sup><a class="bib" href="#bib97">97</a></sup> ser det ut til at det er mangler eller halveis implementasjoner på moduler som f.eks Mozilla og Opera har implementert fullstendig. Text modulen har heller ikke her støtte for symboler, som i Opera og Mozilla, og det kan virke som om dette er et generelt problem å implementere. Webkit har heller ingen fullstending implementasjon av Filter modulen. Det er få som ikke er prøvd implementert men de fleste inneholder bugs eller er bare delvis støttet. Det Webkit har klart i motsetning til Mozilla er å implementere store deler av animasjonsmodulen, selv om mye ikke er fullstendig. Webkit har også implementert store deler av Font modulen, Mozilla og Opera ennå ikke har fått til.</p>
<p>Internet Explorer fra Microsoft har derimot ingen innbygget støtte for SVG. Det ser nå lysere ut for Internet Explorer, ettersom det har blitt kjent at Microsoft har <a href="http://blogs.msdn.com/b/ie/archive/2010/01/05/microsoft-joins-w3c-svg-working-group.aspx" title="Microsoft joins W3C SVG Working Group, Microsoft IE Team Blog, 2010-01-05">meldt seg inn i SVG WG</a><sup><a class="bib" href="#bib98">98</a></sup>, forhåpentligvis for å bygge SVG-standarden inn i IE9. I Internet Explorer 8 og tidligere finnes det ingen støtte for SVG-standarden, uten at det blir benyttet en ekstern plugin. Adobe har f.eks laget en slik plugin som kan benyttes for å <a href="http://www.adobe.com/svg/viewer/install/">vise SVG i IE</a><sup><a class="bib" href="#bib83">83</a></sup>. Det finnes også andre tillegg som kan installeres for å oppnå SVG-støtte, blant annet <a href="http://xmlgraphics.apache.org/batik/" title="Batik Java SVG Toolkit, Apache Software Foundation, 2010-01-02">Batik toolkit fra Apache</a><sup><a class="bib" href="#bib76">76</a></sup> som implementere SVG-spesifikasjonene.</p>
<h3 id="funksjonalitetsomikkeerimplementert"><a name="h-1.4.3"></a>2.3 Funksjonalitet som ikke er implementert</h3>
<p>Det finnes en mer detaljert oversikt over hvilke elementer de ulike nettleserne støtter i forhold til SVG. Denne oversikten finnes på samme sted, som <a href="http://www.codedread.com/svg-support-table.html">prosentfordelingene</a><sup><a class="bib" href="#bib85">85</a></sup>. Oversikten gir en veldig god indikasjon på hvilke områder av SVG-standarden som ikke er implementert i de respektive nettleserne.</p>
<p>Det første vi legger merke til er at det finnes mange røde felter totalt. Fra prosentfordelingen nevnt ovenfor framgår det klar at noen nettlesere har flere røde elementer enn andre. Første som virkelig stikker ut er filtre, som inneholder store deler røde felter. Disse gjør det mulig å legge til ulike effekter på bilder, som f.eks uklarhet, lys eller skarpe kanter.</p>
<p>Mozilla Firefox har i sine siste versjoner hatt full støtte for filtre. Eneste versjon som ikke hadde noen støtte for filtre var Firefox 2.0. Både 3.0, 3.5 og 3.6 har hatt god støtte for filtre, med unntak av 3.5 som manglet støtte for displace filteret.</p>
<p>Opera har også hatt god støtte for disse elementene, bortsett fra versjon 8.5 hvor det ikke fantes støtte i det hele tatt. Opera er også den eneste som har implementert filtre, av nettlesere vi har sett på.</p>
<p>Både Chrome og Safari som begge baserer seg på Webkit har ingen støtte for filtre. Det kan se ut som om Chrome har prøvd å få til støtte i versjon 5 beta, men denne ser ut fra oversikten, relativt eksperimentel ut.</p>
<p>Det er generelt samme resultat på de resterende filterelementene som man finner på tester litt lenger ned på <a href="http://www.codedread.com/svg-support-table.html">statussiden</a><sup><a class="bib" href="#bib85">85</a></sup>. Noe som egentlig er interessant, fordi det viser at man rett og slett i noen nettlesere bare har droppet hele denne modulen. Er det noe man har gjort med vilje, eller er det på grunn av arbeidet som ligger under SVG-standarden og påvirker.</p>
<p>Det er derimot motsatt med font elementene, som gjør det mulig for SVG å tegne opp bokstaver på ulike måter. Det ser ut som Webkit har implementert flere av font elementene som igjen gjør det mulig for både Safari og Chrome å bruke disse. Opera har også fått med disse i sin implementasjon av SVG, mens Firefox i de fleste versjoner har feilet i å implementere disse.</p>
<p>Det er egentlig en viktig del av SVG standarden å kunne vise fonter korrekt i nettleser, for at man i det hele tatt skal kunne lage en webside eller bruke deler av SVG i en webside uten å måtte tenke på om det vil se annerledes ut i i de ulike nettleserne. Siden font er et relativt viktig element når det gjelder tekst på Web, gjør det at SVG ikke blir veldig brukelig slik det er implementert i dag.</p>
<p>En annen del av oversikten er animasjonselementene. Det første vi oppdager er at Firefox ikke har støtte for noen av aninimasjons elemtene bortsett fra 3.7-Alpha. Aninimasjons elementene er bedre implementert i både Chrome og Safari, i alle fall i de siste versjonene. Noen elementer har kun blitt implementert halveis eller inneholder mangler, men det meste av animasjons elementene er implementert i både Chrome, Safari og Opera. Det kan se ut som vi får aninimasjonsstøtte når Firefox 3.7 kommer på markedet.</p>
<p>Det siste røde feltet er text elementer i SVG. Det kan se ut som Firefox har hatt problemer med å implementere disse elementene i alle sine versjoner. De andre nettleserne hatt en relativt feilfri implementasjon men det er et par stykker som enda ikke er helt fullført eller mangler.</p>
<p>Generelt kan det se ut som de fleste av nettleserne har fått det til når det kommer til implementasjons av SVG-standarden, men det er relativt stor forskjell på hvilke elementer som faktisk er støttet i de ulike nettleserne. Dette gjør det vanskelig å ta høyde for spesiell funksjonalitet når man skal utvikle f.eks websider med SVG innhold. Man kan heller ikke regne med at animasjoner fungerer som de skal, eller at fonten man har valgt å bruke vises likt i alle nettlesere. Dette er en veldig svakhet, som gjør jobben til utviklere og designere vanskelig. Det er indikasjoner på at ting begynner å bli bedre jo høyere versjonsnummerne blir på de ulike nettleserne. Dette kan bety at SVG-standarden kan bli brukt mer aktivt i web applikasjoner.</p>
<p>Internet Explorer er ikke nevnt ovenfor av en grunn, den støtter ikke SVG uten å måtte ha installert en plugin for å vise SVG. Det er påbegynt arbeid med SVG i Internet explorer i Januar 2010, noe som kan bety at vi i fremtiden kanskje får se en Internet Explorer også med SVG støtte. Dette vil nok gjøre SVG mer kjent og vil i beste tilfelle øke bruken av SVG. Det er først da vi vil se 100% korrekte implementasjoner av SVG. Foreløpig er det Opera som når høyest på listen, og inneholder det aller meste av elementene.</p>
<h3 id="mangleriimplementasjonavsvg"><a name="h-1.4.4"></a>2.4 Mangler i implementasjon av SVG</h3>
<p>I Mozilla Firefox jobbes det i hovedsak med mangler i to av SVG-modulene som jobbes med. Dette er Font og Animasjons modulen. Animasjons modulen står det verst til med ettersom denne inneholder elementer som enten ikke er implementert, eller som er prøvd implementert men inneholder mangler som gjør at de ikke funger på en riktig måte i forhold til W3C sin SVG-standard. </p>
<p>Første element som ikke fungerer korrekt er animate, som gjør det mulig å animere en enkel attribut eller ting over tid. Det er lagt inn en bug <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=216462" title="Implement SVG (SMIL) Animation, Mozilla Bug Tracker, rapportert: 2003-08-17, sist endret: 2010-03-05, status: RESOLVED FIXED">rapport</a><sup><a class="bib" href="#bib99">99</a></sup> på denne modulen, som finnes i bugzilla. Et annet element som inneholder feil er, animateTransform. Elementet skal blant annet gjøre det mulig å skalere eller rotere en ting i SVG, f.eks et rektangel eller en firkant. Det er også her lagt inn en bug rapport<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=216462" title="Implement SVG (SMIL) Animation, Mozilla Bug Tracker, rapportert: 2003-08-17, sist endret: 2010-03-05, status: RESOLVED FIXED">1</a><sup><a class="bib" href="#bib99">99</a></sup> i tracking systemet mozilla benytter under utvikling. Elementet funger ikke som det skal, noe som har opprinnelse i feilen som også eksisterer i animateelementet. Dette gjør at det å animere elementer ikke fungerer i SVG-implementasjonen i Firefox.</p>
<p>Den andre modulen som enda ikke er ferdig implementert i Firefox er Font modulen. Foreløpig har Mozilla ikke klart å vise mer avanserte fonter, eller fonter som inneholder spesielle symboler som man f.eks finner i japansk tegnsett. Dette fører til at fonter generelt ikke vil fungere korrekt. Istedenfor å vise deler av fonten som faktisk fungerer eller gi tilbake en generell font, blir tekst som bruker en avansert font ikke vist i det hele tatt. Det har også blit lagt inn en <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=119490" title="Implement SVG fonts, Mozilla Bug Tracker, rapportert: 2002-01-11, sist endret: 2010-05-25, status: ASSIGNED">bug</a><sup><a class="bib" href="#bib100">100</a></sup> i bugzilla. Feilen skaper problemer med å vise tekst som blir generert av SVG generelt og vil igjen gjøre SVG upålitelig til å vise tekst i når det blir brukt avanserte fonter.</p>
<p>Webkit har flere moduler som inneholder mangler. Dette går på flere av de samme modulene som Firefox har hatt problemer med å implementere, men også Cursor modulen, samt View. Cursor modulen gjør det mulig å lage en egendefinert peker som kan benyttes i applikasjonen. F.eks om man har lyst til å bruke et eget ikon som skal fungere som mus. Det finnes ingen bug henvisninger som viser hva som er feil på cursor modulen. Men modulen er definitivt ikke implementert korrekt og markert med gult. View modulen har fått registrert en <a href="https://bugs.webkit.org/show_bug.cgi?id=15495" title="SVGViewSpec DOM bindings aka SVGSVGElement.currentView is unimplemented, WebKit Bug Tracker, rapportert: 2007-10-13, sist endret: 2010-05-18, status: NEW">bug</a><sup><a class="bib" href="#bib101">101</a></sup> som forteller at det ikke er mulig å hente ut currentView. Det er hva vi har i nettleseren på et gitt aktivt tidspunkt, og W3C har selv kommentert at denne er vanskelig å implementere. </p>
<p>Webkit har også flere av svakhetene som eksister i implementasjonen til Firefox. Dette går i hovedsak på animasjonsmodulen. Flere av elementene i animasjonsmodulen inneholder feil. Dette gjør blant annet at det ikke er mulig å sette attributter under en animasjon for en viss tidsperiode. Det er heller ikke mulig å flytte en ting på en linje, eller skalere og rotere et element for å lage en animasjon. Dette er relativt viktige deler når det kommer til å lage animasjoner. F.eks når man skal få ting til å fade inn og fade ut eller bare vil at ting flytter seg fra et sted eller annet. Implementasjon av animasjons modulen er derfor relativt ubrukelig i webkit. Det samme gjelder for gradvise endringer i farger, hvor det har blitt registrert en <a href="https://bugs.webkit.org/show_bug.cgi?id=6034" title="WebKit+SVG needs to support color-interpolation for gradients and opacity calculations, WebKit Bug Tracker, rapportert: 2005-12-10, sist endret: 2010-01-30, status: NEW">bug</a><sup><a class="bib" href="#bib102">102</a></sup> i Webkit sin bugzilla.</p>
<p>Opera har ikke spesifisert steder hvor elementer i de ulike modulene kun er delvis implementert. Ut fra den <a href="http://www.codedread.com/svg-support-table.html" title="SVG Support in browsers, Jeff Schiller, uthentet 2010-03-14">generelle</a><sup><a class="bib" href="#bib85">85</a></sup> SVG-status siden, som benytter SVG tester kan vi, trekke en konklusjon på hvordan det står til med SVG-støtten i Opera. Ut fra status-sidene ser man få tegn til elementer som fungerer delvis. Det eneste som kan nevnes er at Opera generelt har flere grønne felter enn både Webkit baserte nettlesere og Mozilla. Det finnes et par tester som viser at det kun er delvis støtte tilgjengelig. Dette er blant annet på animasjonstesten, og på testen som går på fonter som inneholder symboler. Det ser fortsatt ut som både font og animasjon er bedre implementert i Opera enn i Webkit og Mozilla.</p>
<h2><a name="h-1.5"></a>3 Microsofts rolle i utbredelsen av SVG</h2>
<h3 id="internetexplorersmanglendesttteforsvg"><a name="h-1.5.1"></a>3.1 Internet Explorers manglende støtte for SVG</h3>
<p>Fra analysen av nettlesere tidligere ser vi at Microsoft sin Internet Explorer (IE) aldri har hatt innebygget støtte for SVG. Man har alltid vært avhengig av et tredjepartstillegg (plugin) for å kunne se SVG i IE. Den <a href="http://www.oreillynet.com/mac/blog/2001/04/exploring_svg.html" title="Exploring SVG, Jason McIntosh, 2001-04-30">mest populære har til nå vært Adobe sin SVG Viewer</a><sup><a class="bib" href="#bib103">103</a></sup>, men andre har nå kommet på markedet fordi Adobe valgte å <a href="http://www.adobe.com/svg/eol.html" title="Adobe to Discontinue Adobe SVG Viewer, Adobe, 2009-01-01">stoppe å utvikle sin plugin</a><sup><a class="bib" href="#bib104">104</a></sup>.</p>
<p>IE har siden <a href="http://en.wikipedia.org/wiki/Vector_Markup_Language" title="Vector Markup Language, Wikipedia, lest 2010-05-25">versjon 5.0</a><sup><a class="bib" href="#bib105">105</a></sup> hatt støtte for et annet grafikk-språk som heter VML (Vector Markup Language). VML er implementert i XML på lik linje med SVG, men er en mye eldre implementasjon som aldri har blitt standardisert. Vi kommer inn på VML i litt mer detalj senere.</p>
<p>Fordi VML allerede var implementert i IE var Microsoft <a href="http://www.robweir.com/blog/2006/07/cum-mortuis-in-lingua-mortua.html" title="VML and OOXML: Cum mortuis in lingua mortua, Rob Weir, 2006-07-24">ikke interessert</a><sup><a class="bib" href="#bib106">106</a></sup> i å legge inn støtte for en konkurrerende teknologi som SVG. De mente det var nok å ha et vektorformat og var derfor uvillig til å støtte en åpen standard som SVG. Sammen med det faktum at IE sitt utviklerteam nærmest ble lagt ned etter utviklingen av IE6 og at det var <a href="http://www.readwriteweb.com/archives/web_browser_faceoff.php" title="Web Browser Faceoff, Alex Iskold, 2006-10-06">stille på nettleserfronten i over 5 år</a><sup><a class="bib" href="#bib107">107</a></sup> førte til en stagnering av nettlesermarkedet.</p>
<p>Det førte til store problemer for SVG WG, fordi Microsoft hadde gitt klart uttrykk for at VML var en standard som <a href="http://www.w3.org/Graphics/SVG/WG/wiki/Secret_Origin_of_SVG" title="Secret Origins of SVG, W3C, lest 2010-05-25">ikke skulle endres/videreutvikles fordi den allerede var i bruk</a><sup><a class="bib" href="#bib20">20</a></sup>. W3C ble da sittende mellom barken og veden. De kunne utvikle en standard som de hadde kontroll over og kunne videreutvikle, som markedslederen ikke var interessert i å støtte, eller de kunne ratifisere en standard de ikke kunne videreutvikle, men som ville være mulig å få god markedspenetrasjon på i løpet av relativt kort tid. Det at SVG eksisterer som en standard i dag som ikke er kompatibel med VML viser klart og tydlig at de valgte å gå for den første løsningen. Dette har gitt oss en markedsituasjon hvor nettleseren med størst markedsandel ikke støtter den ledende og mest anerkjente teknologien på markedet.</p>
<p>Helt siden IE fikk støtte for VML har Microsoft vært <a href="http://www.robweir.com/blog/2006/07/cum-mortuis-in-lingua-mortua.html" title="VML and OOXML: Cum mortuis in lingua mortua, Rob Weir, 2006-07-24">uvillig til å endre sitt standpunkt</a><sup><a class="bib" href="#bib106">106</a></sup> på om de ønsker å implementere SVG i nettleseren. Dette, sammen med det faktum at Microsoft ikke var villig til å videreutviklet IE, har ført til at sluttbrukere har begynt å benytte andre nettlesere, slik som Firefox, Safari, Opera og Chrome. Alle disse nettleserne støtter SVG i varierende grad, som tidligere avklart. Det at IE sine markedsandeler har <a href="http://gs.statcounter.com/#browser-ww-monthly-200807-201005" title="StatCounter Global Stats, Browsers, July 2008 to May 2010">falt drastisk de siste årene</a><sup><a class="bib" href="#bib108">108</a></sup> har gjort at Microsoft har vært nødt til å revurdere sin strategi hvis de ønsker å beholde brukerne. Det at EU-domstolen også har <a href="http://www.sitepoint.com/blogs/2009/12/17/microsoft-browser-ballot-screen/" title="Microsoft agrees to browser ballot terms, Craig Buckler, 2009-12-17">gitt medhold</a><sup><a class="bib" href="#bib109">109</a></sup> for at Microsoft driver med monopolistisk oppførsel rundt tilgang til alternative nettlesere har gitt sluttbrukere en mer synlig opsjon når det kommer til deres valg av nettleser. Dette, sammen med <a href="http://gs.statcounter.com/#mobile_vs_desktop-ww-monthly-200812-201005" title="StatCounter Global Stats, Mobile vs. Desktop,  December 2008 to May 2010">utbredelsen av diverse mobile enheter</a><sup><a class="bib" href="#bib110">110</a></sup> som <a href="http://www.dlocc.com/articles/apple-ipad-no-flash-plugin-support/" title="Apple iPad: No Flash plugin support, Devin Walker, 2010-01-27">ikke støtter flere av de alternative teknologiene</a><sup><a class="bib" href="#bib111">111</a></sup> vi kommer inn på senere, har ført til at behovet for SVG fra web-utviklere bare blir sterkere og sterkere.</p>
<h3 id="microsoftmelderseginnisvgworkinggroup"><a name="h-1.5.2"></a>3.2 Microsoft melder seg inn i SVG Working Group</h3>
<p>I januar 2010 ble det annonsert at Microsoft har <a href="http://blogs.msdn.com/b/ie/archive/2010/01/05/microsoft-joins-w3c-svg-working-group.aspx" title="Microsoft joins W3C SVG Working Group, Microsoft IE Team Blog, 2010-01-05">søkt om medlemskap i SVG WG</a><sup><a class="bib" href="#bib98">98</a></sup>. Dette kom som et <a href="http://tech.slashdot.org/story/10/01/06/1829223/Microsoft-Wants-To-Participate-In-SVG-Development" title="Microsoft wants to participate in SVG development, Slashdot, 2010-01-06">stort sjokk</a><sup><a class="bib" href="#bib112">112</a></sup> (et positivt sådan) på web-utviklere verden over. Det ble synset mye frem og tilbake om dette betydde at Microsoft endelig hadde endret sin strategi og om dette betydde at en fremtidig versjon av Internet Explorer ville få støtte for SVG. Da Microsoft ble spurt om dette betydde at en fremtidig versjon av IE ville få støtte for SVG valgte Microsoft å <a href="http://news.cnet.com/8301-30685_3-10426321-264.html" title="Microsoft Web-graphics move signals IE ambitions, CNet News, 2010-01-06">ikke ta stilling til det spørsmålet</a><sup><a class="bib" href="#bib113">113</a></sup> på det tidspunktet.</p>
<p>Som vi har sett fra statistikken på epostliten (nevnt tidligere) ser det ut som om Microsoft har valgt å benytte sin stemme og påvirker utviklingen av standarden med sin tilstedeværelse. I tillegg er de fremdeles i <a href="http://www.w3.org/2000/09/dbwg/details?group=19480&amp;public=1&amp;gs=1&amp;" title="Participants in the SVG Working Group, W3C, lest 2010-05-25"><em>good standing</em> med SVG WG</a><sup><a class="bib" href="#bib14">14</a></sup>, som betyr at de møter opp til de regelmessige møtene og følger opp pliktene i deres medlemskap.</p>
<h3 id="microsoftie9vilstttesvg"><a name="h-1.5.3"></a>3.3 Microsoft IE9 vil støtte SVG</h3>
<p>I mai 2010 annonserte Microsoft at deres neste versjon av Internet Explorer kommer til å <a href="http://msdn.microsoft.com/en-us/ie/ff468705.aspx#_Scaling_Vector_Graphics" title="Microsoft IE9 will support SVG, Microsoft Developer Network, 2010-05-05">støtte grunnleggende elementer i SVG 1.1</a><sup><a class="bib" href="#bib114">114</a></sup>. Annonseringen viser at de støtter følgende elementer fra standarden (direkte utdrag):</p>
<ul>
  <li>Most SVG document structure, scripting (eventing), and styling (inline and through CSS)</li>
  <li>Many presentation elements and their corresponding attributes and DOM, including: <ul>
      <li>paths</li>
      <li>shapes</li>
      <li>colors</li>
      <li>transforms</li>
    </ul>
  </li>
</ul>
<p>Dette betyr at grunnleggende grafikk-operasjoner samt hendelseshåndtering og scriptstøtte nå skal virke. Selv om de ikke støtter animasjon, tekst, filtre og raster-bilder betyr det uansett at man nå skal ha mulighet til å lage avanserte brukergrensesnitt med SVG.</p>
<p>Det at man ikke har støtte for tekst og raster-bilder, samt noen av de grunnleggende filtrene, vil føre til at web-utviklere må benytte tegneoperasjonene og tradisjonelle HTML-metoder for å kombinere tekst, raster og vektorgrafikk for å få til det de ønsker på de populære nettleserne. Forhåpentligvis vil man få støtte for mer SVG-funksjonalitet før den endelige versjonen av IE9 foreligger.</p>
<h2><a name="h-1.6"></a>4 Alternativer til SVG</h2>
<p>Det kan være mange grunner for at SVG aldri har fått så mye oppmerksomhet som det har akkurat nå, men noe av grunnen er nok alternativene til SVG som har vært tilgjenglig like lenge. </p>
<p>Det er i hovedsak SVG som er den åpne løsning for multimedia og animasjon på nett. Den har også blitt definert som en åpen web standard av W3C. Det finnes flere store konkurenter, som har fått mye større anerkjennelse. Vi kan blant annet nevne Adobe Flash og Microsoft Silverlight, som begge har blitt tatt i bruk av utviklere og blir benyttet i stor grad på nettsider i dag. </p>
<p>Flash har alltid hatt den største markedsandelen på grunn av sin tidlige ankomst. Adobe har også utviklet god funksjonalitet for både video og lyd via Flash som SVG enda ikke har noe god implementasjon på. Mye av grunnen til at det finnes så mange alternativer til SVG er at SVG aldri har blitt skikkelig implementert i noen nettleser. Det har heller vært et litt uferdig prosjekt som har gjort det vanskelig for utviklere å ta det i bruk. Trenden vi ser nå er at flere og flere begynner å se mot SVG. Microsoft har blant annet sagt seg villig til å ta i bruk SVG i Internet Explorer 9. </p>
<p>Vi skal derfor se hvorfor SVG er bedre enn mange av de teknologiene som allerede eksisterer på internett. Det er ikke uten grunn at W3C har valgt å legge ned tid og resursser i SVG.</p>
<h3 id="hvordanutviklerebenytteradobeflashfordisvgikkeertilgjengelig"><a name="h-1.6.1"></a>4.1 Hvordan utviklere benytter Adobe Flash fordi SVG ikke er tilgjengelig?</h3>
<p>Adobe Flash har lenge vært en viktig del av vår hverdag på internett. Reklame har fått et helt nytt medium med Flash. Det er enkelt å produsere spennende snutter som fanger brukerens oppmerksomhet. Det også mange sider som er utviklet fultt og helt i Flash, noe som vil gi en helt spesiell brukeropplevelse. </p>
<p>Først og fremst er Flash en multimedia plattform som nå vedlikeholdes av <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash, Wikipedia, lest 2010-05-27">Adobe</a><sup><a class="bib" href="#bib115">115</a></sup>. Det er mulig å lage interaktive nettsider ved å bruke Flash for å vise video, lyd og animasjoner. <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash, Wikipedia, lest 2010-05-27">Flash</a><sup><a class="bib" href="#bib115">115</a></sup> benytter vektor og raster grafikk for å lage animasjoner. Det gjør det mulig å lage animasjoner som kan skaleres etterbehov uten at man mister skarpheten. Dette er en av fordelene med vektor-grafikk.</p>
<p>Flash har også fått et objektorient script språk, <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash, Wikipedia, lest 2010-05-27">ActionScript</a><sup><a class="bib" href="#bib115">115</a></sup>, som utviklere kan bruke for å øke funksjonaliteten i Flash-snutten. Dette kan for eksempel være at man vil koble opp mot eksterne script og hente ned informasjon eller lagre informasjon som blir skrevet inn.</p>
<p>Eneste kravet for å vise flash animasjoner og videoer er at man installer en plugin fra adobe, <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash, Wikipedia, lest 2010-05-27">Adobe Flash Player</a><sup><a class="bib" href="#bib115">115</a></sup>.</p>
<h4 id="fordelervedadobeflash"><a name="h-1.6.1.1"></a>4.1.1 Fordeler ved Adobe Flash</h4>
<p>Adobe Flash har lenge vært <a href="http://www.adobe.com/products/player_census/flashplayer/version_penetration.html" title="Adobe Flash plugin usage worldwide, Adobe, lest 2010-05-27">markedsdominerende</a><sup><a class="bib" href="#bib116">116</a></sup> når video, lyd og animasjon skal vises i nettleseren. Alle har gjort seg vant med at en plugin må installeres for å kunne se siste trailer av en kommende film eller en video reportasje fra en avis. Etter at Microsoft tok dette i bruk under utvikling av MSN <a href="http://en.wikipedia.org/wiki/Adobe_Flash" title="Adobe Flash, Wikipedia, lest 2010-05-27">nettsidene</a><sup><a class="bib" href="#bib115">115</a></sup> sine, har flere og flere fulgt etter. Idag benytter store deler av nettsidene vi besøker flash på deler eller hele siden.</p>
<p>Utvikler som ønsker å bruke animasjoner eller video i sitt arbeid, kan være sikker på at de aller fleste vil kunne vise innholdet om de benytter Flash som teknologi. Utviklere kunne valgt å benytte f.eks SVG til denne oppgaven, da også SVG gjør mye av den samme jobben som Flash gjør. SVG har midlertidig ingen hundre prosent god implementasjon og ingen nettlesere støtter all funksjonalitet SVG standarden har å tilby. Internet Explorer støtter ingen deler av SVG standarden og det må her brukes en <a href="http://www.planetsvg.com/content/svg-solutions-internet-explorer" title="SVG solutions for Internet Explorer, PlanetSVG, 2009-02-15">plugin</a><sup><a class="bib" href="#bib117">117</a></sup> uansett.</p>
<h4 id="ulempervedadobeflash"><a name="h-1.6.1.2"></a>4.1.2 Ulemper ved Adobe Flash</h4>
<p>Med tiden har vi blitt mer bevisst på hva vi benytter av applikasjoner og tillegg for å kunne se det vi vil på nettet. Vi har også blitt mer bevisst på hvilke teknologier vi støtter på bakgrunn av åpenhet mot brukermassen, stabilitet og sikkerhet. Jobben som Adobe Flash gjør kunne og burde blitt gjort med andre teknologier med bakgrunn i flere forhold.</p>
<p>Først kan vi se på <a href="http://www.adobe.com/support/security/#flashplayer" title="Adobe Security bulletins and advisories, Adobe, lest 2010-05-27">sikkerheten</a><sup><a class="bib" href="#bib118">118</a></sup> i Adobe Flash opp igjennom årene, og det er ingen lys verden vi får innblikk i. Adobe Flash er kanskje en av de store synderne med tanke på sikkerhetshull og mulighet for å kunne eksekvere skadelig kode på klient siden. Det ble gjort en undersøkelse av blant annet <a href="http://www.trusteer.com/files/Flash_Security_Hole_Advisory.pdf" title="Adobe Flash Security Hole Advisory, Trusteer, 2009-08-13">Trusteer</a><sup><a class="bib" href="#bib119">119</a></sup> som sa at Adobe Flash var en av de mest brukte teknologieen er for å eksekvere skadelig kode på nettbrukeres maskiner.</p>
<p>For å kunne utvikle noe i Flash kreves det egne <a href="http://en.wikipedia.org/wiki/SWF" title="SWF, Wikipedia, lest 2010-05-27">verktøy</a><sup><a class="bib" href="#bib120">120</a></sup> som kan kompilere og generere koden som skrives slik at vi sluttresultatet kan vises i nettleseren eller Adobe Flash Player. Det er flere verktøy ute på markedet som gjør denne jobben, både gratis og kommersielle verktøy. Det er ofte at kommersielle verktøy må velges siden mange av gratis verktøyene ikke gjør konverteringsjobben godt nok.</p>
<p>Utvikling av SVG krever mindre verktøy enn Flash. Utvikleren kan velge en teksteditor de kjenner og kan bruke effekten uten tidskostnaden ved å måtte lære et nytt verktøy. En SVG kan enkelt testes underveis. Ettersom det ikke er behov for en ekstra plugin kan utvikleren bare åpne SVGen i nettleseren. SVG er strukturert tekst i XML format, så enhver utvikler med litt forståelse for XML formatet kan enkelt tolke SVG filer.</p>
<p>En ekstra fordel ved SVG er at formatet lagres som tekst. Dette gjør det mulig å komprimere innholdet enda mer, ved å bruke f.eks <a href="http://www.w3.org/TR/SVG11/minimize.html" title="Minimize SVG File Size, W3C, 2003-01-14">gzip</a><sup><a class="bib" href="#bib121">121</a></sup>. </p>
<p>Det er også viktig å nevne at Adobe Flash krever en egen <a href="http://en.wikipedia.org/wiki/Adobe_Flash_Player" title="Adobe Flash Player, Adobe, lest 2010-05-27">plugin</a><sup><a class="bib" href="#bib122">122</a></sup> for å kjøre Flash formatet. Dette fordi det ikke eksisterer noen implementasjon i nettleserne for å kunne lese Flash direkte uten å benytte tredjeparts moduler.</p>
<p>SVG er implementert direkte i nettleseren og krever derfor ingen ekstra programvare for å kunne vises. Dette gjør det enklere for brukeren å få informasjonen, samtidig som det reduserer antall ekstra og tredjeparts programvare man må ha installert. Det er også viktig å påpke at støtte for SVG ikke er helt fullstendig enda, men dette forbedres daglig hos alle de store nettleserne. Pr idag er har flere av de store mer enn god nok implementasjon for at SVG kan bli tatt i bruk av flere utviklere.</p>
<p>Adobe Flash er et hundre prosent <a href="http://www.apple.com/hotnews/thoughts-on-flash" title="Thoughts on Flash, Apple, lest 2010-05-27">proprietært</a><sup><a class="bib" href="#bib123">123</a></sup> prosjekt. Det er Adobe som eier alle rettigheter til formatet og det er bare Adobe som kan rette feil eller implementere ny funksjonalitet. Flash er blitt et format som brukes overalt på internett, det er til og med flere store sider som baserer seg på å vise video ved hjelp av Flash. Det er derfor skremmende at dette ikke er en teknologi som også er tilgjengelig for allmenheten og kontrollert av et sentralt organ.</p>
<p>I motsetning til Flash er det flere andre teknologier som blir benyttet på nettsider og kontrollert av en sentral enhet hvor store aktør innenfor internettmarkedet idag har åpne standarder. CSS, JavaScript og HTML er teknologier som er åpne for alle. Dette gjelder også for SVG som er en åpen standard, og utviklere som er interesert i å være med i utvikling kan selv ta ansvar for å rapportere feil.</p>
<h3 id="kanmicrosoftsilverlightbenyttesforomgmangelpsvg-sttte"><a name="h-1.6.2"></a>4.2 Kan Microsoft SilverLight benyttes for å omgå mangel på SVG-støtte?</h3>
<p>Microsoft Silverlight er på mange måter det samme som Flash fra Adobe, pakket inn i kjent Microsoft stil. <a href="http://en.wikipedia.org/wiki/Microsoft_Silverlight" title="Microsoft Silverlight, Wikipedia, lest 2010-05-27">Silverlight</a><sup><a class="bib" href="#bib124">124</a></sup> er først og fremst et rammeverk for utviklere som bruker ASP, C# eller andre språk støttet av Microsoft. Dette rammeverket gjør det mulig å lage grafikk, animasjoner og vise både lyd og bilde. Rammeverket har også fått deler av .NET rammeverket integrert, slik at mye av den samme funksjonaliteten som finnes i standard .NET biblioteket også finnes i Silverlight.</p>
<p>Silverlight er tilgjenglig på andre platformer enn Microsofts egne, i gjennom Moonlight. <a href="http://www.mono-project.com/Moonlight#Goals" title="Moonlight - Mono Goals, Mono Project, lest 2010-05-27">Moonlight</a><sup><a class="bib" href="#bib125">125</a></sup> er utviklet av Novell, og gjør det mulig å bruke Silverlight på både Linux og BSD platform.</p>
<p>Microsoft har med Silverlight gjort det mulig for utviklere å bruke de samme verktøyene som de er vant til i utviklingen av .NET applikasjoner. Utvikleren kan også benytte en tekst editor for å lage en Silverlight applikasjon, men dette er en mer komplisert prosess enn å bare bruke f.eks Visual Studio hvor mye av jobben blir automatisert.</p>
<h4 id="fordelervedmicrosoftsilverlight"><a name="h-1.6.2.1"></a>4.2.1 Fordeler ved Microsoft Silverlight</h4>
<p>Microsoft har laget et rammeverk for å lage større applikasjoner som benytter både grafikk, animasjoner, lyd og video. Det er viktig å se at dette ikke bare er en standard for å vise grafikk på nett men at det er et rammeverk for utviklere som kan brukes for å lage <a href="http://en.wikipedia.org/wiki/Rich_Internet_application" title="Rich internet applications, Wikipedia, lest 2010-05-28">Rich internet applications</a><sup><a class="bib" href="#bib126">126</a></sup>. Silverlight begrenser seg altså ikke til kun å vise grafikk, animasjoner, video og lyd på nett som SVG kanskje gjør.</p>
<h4 id="ulempervedmicrosoftsilverlight"><a name="h-1.6.2.2"></a>4.2.2 Ulemper ved Microsoft Silverlight</h4>
<p>Silverlight har sine fordeler, men det er ikke uten ulemper når vi skal sammenligne den mot SVG. Siden SVG ikke har like mange muligheter som Silverlight, er det en mye mer spesialisert teknologi.</p>
<p>Silverlight er som sagt et rammeverk, og det blir ikke generert en fil som inneholder alle elementer brukt i applikasjonen. Det er <a href="http://www.smashingmagazine.com/2009/05/09/flash-vs-silverlight-what-suits-your-needs-best" title="Flash vs. Silverlight - Deployment Part, Smashingmagazine, 2009-05-09">flere filer</a><sup><a class="bib" href="#bib127">127</a></sup> og mapper som må være til stede på server-siden av en applikasjon for at den skal fungere. Det er også relativt komplisert struktur på noen av filene, og det kan derfor være vanskelig å sette sammen en applikasjon uten et skikkelig verktøy.</p>
<p>SVG har en stor fordel når det kommer til antall filer små må være tilstede, siden den kun krever filen som inneholder grafikken. Dette er også en tekst fil, som ikke trenger noe annet enn en nettleser for å tolkes. SVG kan også få store filer med mange linjer kode men man vil fortsatt slippe å trekke inn biblioteker eller andre filer for å vise grafikken som er laget. Siden det kun er en fil som bruker den velkjente XML strukturen, kan SVG grafikk enkelt lages i en tekst editor.</p>
<p>Silverlight er som Flash en klient side applikasjon. Det vil si at det er nettleseren som tar seg av kjøringen av Silverlight applikasjonen. Nettleseren har ingen innebygget støtte for Silverlight, og trenger derfor <a href="http://www.microsoft.com/silverlight/what-is-silverlight" title="What Is Silverlight?, Microsoft, lest 2010-05-27">tredjepartsprogramvare</a><sup><a class="bib" href="#bib128">128</a></sup> for å kunne vise applikasjonen. Det er sjelden positivt når en bruker oppsøker et nettsted og trenger enda en plugin for å kunne vise innholdet. Brukeren hadde fått en bedre opplevelse om andre teknologier kunne brukes for å slippe alle pluginene.</p>
<p>SVG har denne fordelen. Siden det støttes direkte i nettleseren trenger ikke brukeren å bekymre seg om å laste ned ekstra tillegg for å finne innholdet på ulike nettsider. Ettersom det er store forskjeller på alder og ferdigheter blant internett brukere er det viktig å gjøre mest mulig informasjon tilgjenglig for flest mulig. </p>
<p>Egentlig kan man stille spørsmål om hvorfor det var behov for enda en teknologi som gjorde den samme jobben som flere andre før den. Vi har f.eks mange likheter i mellom Silverlight og Flash. Mange vil gå så langt å si at Silverlight er Flash i en Microsoft wrapping, noe som på mange måter er korrekt. Hvis vi sammenligner f.eks hvordan SVGs XML og Silverlights XAML ser ut når nettleseren skal tolke det, er dette veldig likt. Mange stiller derfor spørsmål hvorfor Microsoft ikke heller tok i bruk SVG som allerede var etablert istedenfor å lage noe helt eget og proprietært. </p>
<h3 id="kanjavascript-biblioteksomraphalvreetalternativtilsvg"><a name="h-1.6.3"></a>4.3 Kan JavaScript-bibliotek som Raphaël være et alternativ til SVG?</h3>
<p><a href="http://raphaeljs.com" title="Raphaels - JavaScript library, RaphaelJs, lest 2010-05-27">RaphaëlJS</a><sup><a class="bib" href="#bib129">129</a></sup> er et JavaScript-bibliotek som baserer seg på SVG standarden for å kunne vise animasjoner og vektorgrafikk i nettleseren. Den benytter seg også av VML, som er Microsoft versjon av SVG, for å kunne vise vektorgrafikk og animasjoner selv i Internet Explorer. Dette gjør det mulig for utviklere å ta i bruk en enkel kilde for å vise animasjoner og grafikk, nemlig Raphaels JavaScript bibliotek.</p>
<p>Ved å inkludere samt benytte dette når det skal genereres vektor grafikk slipper man å tenke på om grafikken vil vises likt i de ulike nettleserne fordi biblioteket selv emulerer funksjonalitet som ikke er tilgjenglig i SVG implementasjonen for nettlesere. Derfor kan man være enda litt sikrere på at innholdet vil bli vist på korrekt måte uavhengig av nettleser.</p>
<p>I prinsippet kan man ikke kalle Raphael sitt JavaScript bibliotek et alternativ til SVG siden den faktisk tar i bruk SVG, men emulerer funksjonalitet som enda ikke er støttet hundre prosent i de ulike nettleserne. Det kan heller være et godt hjelpemiddel for utviklere vant med en imperativ programmerings form. Utviklere som vil slippe å sette seg grundig inn i f.eks XML syntaks for å kunne lese SVG filer direkte, men heller bruke et sett med funksjoner for å lage grafikken det er behov for.</p>
<h4 id="fordelervedraphalsittjavascriptbibliotek"><a name="h-1.6.3.1"></a>4.3.1 Fordeler ved Raphaël sitt JavaScript bibliotek</h4>
<p>Selv om Raphaëls bibliotek ikke er et nytt alternativ til SVG standarden er det fortsatt et nyttig verktøy for utvikling av vektorgrafikk.</p>
<p>Raphaels JavaScript bibliotek gjør det mulig å lage grafikk ved å bruke <a href="http://raphaeljs.com/reference.html" title="Raphael Reference, RaphaelJs, lest 2010-05-27">funksjoner</a><sup><a class="bib" href="#bib130">130</a></sup> som man ville gjort i f.eks Java eller C++. Biblioteket har altså et <a href="http://en.wikipedia.org/wiki/Imperative_programming" title="Imperative Programming, Wikipedia, lest 2010-05-27">imperativt</a><sup><a class="bib" href="#bib131">131</a></sup> programmerings fokus, i motsetning til SVG som er <a href="http://en.wikipedia.org/wiki/Declarative_programming" title="Declarative Programming, Wikipedia, lest 2010-05-27">deklarativt</a><sup><a class="bib" href="#bib6">6</a></sup>. Ved å bruke denne programmerings formen er det enklere å f.eks duplisere elementer eller ta valg basert på hendelser i koden. </p>
<p>SVG benytter en deklarativ programmerings form i sine tekstfiler som kan tolkes av nettleseren. For utviklere eller brukere som er kjente med f.eks XML og HTML som begge er deklarative språk, er det en kort lærningskurve for å kunne lage avanserte animasjoner. De som ikke er kjent med denne formen for programmering kan ha mer nytte av f.eks biblioteket til Raphael som lager grafikk ved å bruke kjent programmeringsstil. </p>
<p>Det kan også være en tung affære å gjøre endringer på et SVG element etter å ha skrevet komplisert kode til animasjoner og grafikk. Det kan f.eks være at det har blitt valgt feil farge, eller gjort en skrive feil i en tekst som blir definert flere steder for animasjon. I slike tilfeller kunne man sluppet unna med mindre omskriving ved f.eks å bruke Raphaels bibliotek og duplisert elementer med f.eks en for-løkke. </p>
<h4 id="ulempervedbrukavraphaljavascript-bibliotek"><a name="h-1.6.3.2"></a>4.3.2 Ulemper ved bruk av Raphaël JavaScript-bibliotek</h4>
<p>Biblioteket er ikke direkte støttet av nettleseren. Det kreves at et bibliotek er importert i koden på nettsiden før eventuelle animasjoner begynner å tegnes opp. Vi ser her noe av det samme som må til for å få blant annet Flash og Silverlight til å fungere, men Raphael er allikevel bedre ettersom det ikke er opp til brukeren å legge til noe ekstra, men opp til utvikleren.</p>
<p>I en optimal verden er tredjeparts moduler som Flash og Silverlight byttet ut med SVG funksjonalitet og denne er implementert med samme funksjonalitet i alle nettlesere. Vi er enda ikke komme dit at SVG har full støtte i alle nettlesere men det er fortsatt tungvint å måtte legge et lag i mellom nettleser og klient for å få vist grafikk og animasjon.</p>
<p>Raphaels bibliotek har tatt utgangspunkt i grafikk, samt animasjonsfunksjonaliteten til SVG standarden. Dette har allerede blitt implementert i de fleste nettlesere igjennom SVG. Etter hvert som dette utvikles videre kan man spørre om det faktisk er nødvendig med et eget bibliotek for å oppnå funksjonalitet som senere vil eksistere i alle nettlesere med SVG. Selv Internet Explorer har <a href="http://blogs.msdn.com/b/ie/archive/2010/03/18/svg-in-ie9-roadmap.aspx" title="SVG in IE9 Roadmap, IEBlog, 2010-03-18">annonsert</a><sup><a class="bib" href="#bib132">132</a></sup> at de vil ha en SVG implementasjon ferdig i IE 9. Raphaëls bibliotek har i en lenger periode gjort det enklere for utvikler å lage animasjoner som fungerer i alle nettlesere, men vil bli overflødig så fort fulle implementasjoner av SVG blir tilgjenglig i nettleserne.</p>
<p>Raphaels Javascript bibliotek vil først og fremst være et <a href="http://www.samuelclay.com/raphael/svg_open_paper.pdf" title="Raphaels Paper - SVG Open 2009, Raphael, lest 2010-05-27">verktøy</a><sup><a class="bib" href="#bib133">133</a></sup> for å bruke SVG teknologien som allerede finnes i nettleserne. Det hadde ikke fungert uten SVG ettersom den bruker store deler av SVG standarden for å kunne vise elementene som lages ved hjelp av dette bilblioteket. </p>
<p>Inntil vi ser en jevn og god støtte i alle de store nettleserne er det behov for slike biblioteker som gjør det mulig å utnytte funksjonalitet som enda ikke funger helt prikkfritt. Dermed kan vi bli kan kjent med standarden og hva den kan brukes til i fremtiden.</p>
<h3 id="microsoftvmletalternativtilsvg"><a name="h-1.6.4"></a>4.4 Microsoft VML, et alternativ til SVG</h3>
<p>VML har samme <a href="http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx" title="Vector Markup Language(VML), Microsoft, lest 2010-05-27">deklarative fokuset</a><sup><a class="bib" href="#bib134">134</a></sup> som SVG, og benytter også <a href="http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx" title="Vector Markup Language(VML), Microsoft, lest 2010-05-27">XML syntaks</a><sup><a class="bib" href="#bib134">134</a></sup> for å lage grafikk og animasjoner. Det som er annerledes med VML er at produktet kommer fra Microsoft, og gjør mye av jobben for Internet Explorer som SVG gjør for de fleste andre store nettlesere.</p>
<p>VML er et proprietært språk utviklet av Microsoft som ble <a href="http://en.wikipedia.org/wiki/Vector_Markup_Language" title="Vector Markup Language, Wikipedia, lest 2010-05-27">presentert for W3C</a><sup><a class="bib" href="#bib105">105</a></sup> som en ny standard for animasjon og multimedia på nett. SVG valgte bort dette språket til fordel for SVG.</p>
<p>Etter at W3C startet utviklingen av SVG isteden for VML, ble arbeidet med VML <a href="http://en.wikipedia.org/wiki/Vector_Markup_Language" title="Vector Markup Language, Wikipedia, lest 2010-05-27">avsluttet</a><sup><a class="bib" href="#bib105">105</a></sup>. Selv om utviklingen ble avsluttet har Microsoft valgt å fortsette implementering av teknologien i nettleserne sine fra Internet Explorer 5.5 og oppover. Dette gjør det mulig for utviklere også i dag å bruke VML for å vise animasjoner og grafikk på samme måte som SVG.</p>
<h4 id="fordelervedmicrosoftvml"><a name="h-1.6.4.1"></a>4.4.1 Fordeler ved Microsoft VML</h4>
<p>VML er det eneste språket som ligner SVG og som fungerer i Internet Explorer. Det funger også bra, og kan vise både <a href="http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx" title="Vector Markup Language(VML), Microsoft, lest 2010-05-27">grafikk og animasjoner</a><sup><a class="bib" href="#bib134">134</a></sup> som SVG kan gjøre i andre nettlesere. Det gjør at VML foreløpig er veldig nyttig for utviklere som et språk likt SVG for å ha en form for cross-browser support i grafikken som lages. SVG har enda ikke kommet dit at Internet Explorer støtter standarden, og det er derfor behov for VML enda liten stund til.</p>
<p>En annen fordel med VML er at det i forhold til f.eks språk som Flash og Silverlight bruker <a href="http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx" title="Vector Markup Language(VML), Microsoft, lest 2010-05-27">XML stuktur</a><sup><a class="bib" href="#bib134">134</a></sup>. Dette er samme struktur som SVG bruker for å vise grafikk og animasjoner. Dette gjør for det første at koden er liten i størrelse og kan enkelt komprimeres. Det er også enkelt for utviklere som har jobbet med SVG å forstå strukturen i VML. Sammenligning av syntax viser store forskjeller, men dette er kun et spørsmål om å lære hvordan VML skal brukes. </p>
<p>Siden VML benytter XML struktur er det også mulig å konvertere mellom VML og SVG. Dette trenger ikke å være en enkel prosess, men det er i prinsippet mulig siden begge bruker en XML struktur.</p>
<h4 id="ulempervedmicrosoftvml"><a name="h-1.6.4.2"></a>4.4.2 Ulemper ved Microsoft VML</h4>
<p>Først og fremst er VML enda en ting som utviklere må ta hensyn til når de skal ta i bruk grafikk og animasjon i nettleseren. Vi kan bare se hvor mye problematikk ulik tolkning av CSS har skapt for web designere for å få et likt resultat i f.eks Internet Explorer og Mozilla Firefox. Dette er samme teknologi i to nettlesere, nå skal begge teknologiene virke i to nettlesere.</p>
<p>Det kan være enkelt å f.eks legge ved både VML og SVG kode, så det ikke er behov for å ta hensyn til hvilke nettleser som blir brukt for å vise innholdet. Dette er likevel tungvint når man er ute etter å få en standard som alle kan benytte. </p>
<p>Det kunne vært mulig å generere kode for enten VML eller SVG basert på hvilken nettleser som ble brukt av klienten, men det måtte da lages en eller annen form for kode generator for SVG og VML som dynamisk kunne generere korrekt kode slik at grafikk og animasjoner ble vist på rett måte.</p>
<p>VML er veldig nettleser spesifikt, det fungerer faktisk i kun en nettleser. Dette er lite positivt ettersom all utvikling av VML grafikk, vil måtte skrives om til noe annet for at andre enn IE brukere skal kunne se innholdet. Dette er kanskje en av hovedgrunnene til at VML ikke ble tatt opp som en standard i W3C men at W3C heller tok deler av VML og startet SVG utviklingsgruppen.</p>
<p>VML har blitt en del av historien til Microsoft ettersom all videre utvikling av denne teknologien ble avsluttet i 1998. Etter dette har Microsoft ikke gjort forbedringer eller prøvd å lage mer funksjonalitet. Dette kan ha sammenheng med nederlaget hos W3C da VML ikke ble tatt opp som offisiell standard for multimedia på internett.</p>
<p>Det er derfor til ettertanke at VMLs eksistens kun er tilstede i fravær av annen teknologi som fungerer like godt i Internet Explorer. Hadde Microsoft gjort en innsats for utvikling av SVG også for Internet Explorer ville det vært mulig for utviklere og brukere heller å fokusere mot SVG istedenfor å tenke på begge. </p>
<h2><a name="h-1.7"></a>5 Konklusjon</h2>
<p>SVG er en standard som har utviklet seg i god takt siden første versjon fra 2001. Standarden har blitt implementert i mange produkter, fra tegneprogrammer, produktivitetprogrammer, nettlesere til mobile enheter. Populariteten i dagens marked er svært god, og utviklere finner det svært fornøyelig å jobbe med et XML-format for å produsere vektor-grafikk.</p>
<p>SVG hadde lenge et problem fordi Microsoft ikke var villig til implementere det i sitt flaggskip-produkt, Internet Explorer. Microsoft sitt valg om å søke medlemskap i SVG WG og påfølgende med å implementere støtte for SVG i den oppadkommende Internet Explorer 9 viser en klar endring i strategi fra deres side. SVG-støtte i IE er noe markedet lenge har etterspurt, og disse grepene fra Microsoft gir web-utviklere verden over virkelig noe å glede seg over. Microsoft har ikke gitt noen offisiell grunn for hvorfor de nå har valgt å endre strategi, men det er god grunn til å tro at deres nedadgående markedsandeler på nettlesermarkedet er en av grunnene. Vår spådom er at IE9 vil ha erstattet Microsofts eksisterende versjoner i løpet av 3-5 år og web-utviklere kan endelig begynne å ta i bruk vektor-grafikk på nett uten altfor store problemer.</p>
<p>Som alltid må web-utviklere fremdeles måtte forholde seg til feil og mangler i de forskjellige nettleserne. Dette er ikke noen ny realitet, da det finnes mange problemer i HTML- og CSS-støtten i nettlesere. SVG kommer garantert til å slite med de samme barnesykdommene i flere år fremover. Men det faktum at vi nå er på tampen til å få grunnleggende funksjonalitet ut i hendende på web-utviklere er definitivt positivt.</p>
<p>Det som er viktig å nevne er at SVG har vært støttet av de fleste andre nettleser-leverandører i varierende grad i en god stund, og med Microsoft sittende ved bordet blir bildet komplett. Så snart IE6-8 får en minimal markedsandel kan man benytte grunnfunksonaliteten i SVG uten å tenke seg om.</p>
<p>VML, Flash og Silverlight, alternative teknologier til SVG, vil ikke forsvinne over natten. Men markedet viser helt klart og tydlig at de er klare til å ta i bruk ikke-proprietære teknologier på tross av de utfordringer det gir i forhold til kompatibilitet. Fordelene med å ikke kreve installasjon av et tredjepartstillegg (som vanligvis ikke er mulig på mobile plattformer) er helt klart svært store.</p>
<p>RaphaëlJS, som er en kompatibilitetsløsning for å bruke enten SVG eller VML avhengig av nettleser (via JavaScript), har blitt tatt i bruk av bl.a. New York Times. Bibliotekets funksjonalitet gir web-utviklere en god mulighet til å starte med vektor-grafikk på deres nettsider allerede i dag. Men siden den kun kan støtte felles funksjonalitet i de to standardene vil den ikke la web-utviklere utnytte SVG fullt ut.</p>
<p>Når vi utarbeidet problemstillingen for oppgaven (oktober 2009) var fremtidsutsiktene for SVG pessimistiske fordi Microsoft ikke var ombord. Med Microsofts endringer i strategi fra mai 2010 er fremtidsutsiktene endret seg helt og holdent. Fremtidsutsiktene for SVG ser nå svært positive ut. Om 3-5 år, når markedet mest sannsynlig har oppgradert til IE9, vil man ha helt nye muligheter for å lage intuitive og avanserte web-grensesnitt på tvers av nettleserimplementasjoner.</p>
<p>Vi er helt klart inne i en svært spennende tid for nettet som en plattform.</p>
<h2><a name="h-1.8"></a>Bibliografi</h2>



<dl class="bibliography">
<dt>1. <a class="bib" name="bib1" href="http://github.com">http://github.com</a></dt>
<dd>github - social coding, open source code hosting service</dd>

<dt>2. <a class="bib" name="bib2" href="http://www.w3.org/Graphics/SVG/">http://www.w3.org/Graphics/SVG/</a></dt>
<dd>Scalable Vector Graphics - XML Graphics for the Web, W3C, 2009-12-11</dd>

<dt>3. <a class="bib" name="bib3" href="http://www.w3.org">http://www.w3.org</a></dt>
<dd>World Wide Web Consortium front page</dd>

<dt>4. <a class="bib" name="bib4" href="http://www.w3.org/2007/11/SVG_rechartering/SVG-WG-charter.html#coordination">http://www.w3.org/2007/11/SVG_rechartering/SVG-WG-charter.html#coordination</a></dt>
<dd>SVG Dependencies, W3C/Doug Schepers/Chris Lilley, 2008-04-16</dd>

<dt>5. <a class="bib" name="bib5" href="http://www.w3.org/standards/xml">http://www.w3.org/standards/xml</a></dt>
<dd>eXtensible Markup Language overview page, W3C</dd>

<dt>6. <a class="bib" name="bib6" href="http://en.wikipedia.org/wiki/Declarative_programming">http://en.wikipedia.org/wiki/Declarative_programming</a></dt>
<dd>Declarative programming, Wikipedia, lest 2010-02-26</dd>

<dt>7. <a class="bib" name="bib7" href="http://www.w3.org/standards/webdesign/htmlcss">http://www.w3.org/standards/webdesign/htmlcss</a></dt>
<dd>HyperText Markup Language overview page, W3C</dd>

<dt>8. <a class="bib" name="bib8" href="http://www.ecmascript.org/">http://www.ecmascript.org/</a></dt>
<dd>ECMAScript - the language of the web, Ecma International</dd>

<dt>9. <a class="bib" name="bib9" href="http://www.w3.org/DOM/">http://www.w3.org/DOM/</a></dt>
<dd>Document Object Model overview page, W3C/Philippe Le Hégaret/Ray Whitmer/Lauren Wood, 2009-01-06</dd>

<dt>10. <a class="bib" name="bib10" href="http://www.w3.org/TR/smil-animation/">http://www.w3.org/TR/smil-animation/</a></dt>
<dd>Synchronized Multimedia Integration Language W3C Recommendation, W3C, 2001-09-04</dd>

<dt>11. <a class="bib" name="bib11" href="http://www.w3.org/standards/webdesign/graphics">http://www.w3.org/standards/webdesign/graphics</a></dt>
<dd>Graphics overview page, W3C</dd>

<dt>12. <a class="bib" name="bib12" href="http://www.w3.org/Graphics/SVG/About.html">http://www.w3.org/Graphics/SVG/About.html</a></dt>
<dd>About SVG - 2d Graphics in XML, W3C/Chris Lilley/Dean Jackson, 2004-10-29</dd>

<dt>13. <a class="bib" name="bib13" href="http://www.3gpp.org/">http://www.3gpp.org/</a></dt>
<dd>3rd Generation Partnership Project front page, ETSI</dd>

<dt>14. <a class="bib" name="bib14" href="http://www.w3.org/2000/09/dbwg/details?group=19480&amp;public=1&amp;gs=1&amp;">http://www.w3.org/2000/09/dbwg/details?group=19480&amp;public=1&amp;gs=1&amp;</a></dt>
<dd>SVG Working Group Participants, W3C/Gerald Oskoboiny/Dominique Hazaël-Massieux, 2010-04-09</dd>

<dt>15. <a class="bib" name="bib15" href="http://lists.w3.org/Archives/Public/public-svg-wg/">http://lists.w3.org/Archives/Public/public-svg-wg/</a></dt>
<dd>SVG Working Group public mailing list archive, uthentet 2010-04-01</dd>

<dt>16. <a class="bib" name="bib16" href="http://lists.w3.org/Archives/Public/public-svg-ig/">http://lists.w3.org/Archives/Public/public-svg-ig/</a></dt>
<dd>SVG Interest Group public mailing list archive, uthentet 2010-04-01</dd>

<dt>17. <a class="bib" name="bib17" href="http://www.institut-telecom.fr/p_en_present_inst_36.html">http://www.institut-telecom.fr/p_en_present_inst_36.html</a></dt>
<dd>Institut Télécom about page, lest 2010-04-01</dd>

<dt>18. <a class="bib" name="bib18" href="http://www.ikivo.com/04about.html">http://www.ikivo.com/04about.html</a></dt>
<dd>Ikivo AB about page, lest 2010-04-01</dd>

<dt>19. <a class="bib" name="bib19" href="http://www.ikivo.com/open_standards.html">http://www.ikivo.com/open_standards.html</a></dt>
<dd>Based on open standards, Ikivo AB, 2009-10-23</dd>

<dt>20. <a class="bib" name="bib20" href="http://www.w3.org/Graphics/SVG/WG/wiki/Secret_Origin_of_SVG">http://www.w3.org/Graphics/SVG/WG/wiki/Secret_Origin_of_SVG</a></dt>
<dd>The Secret Origin of SVG, W3C/Doug Schepers, 2008-09-15</dd>

<dt>21. <a class="bib" name="bib21" href="http://www.w3.org/TR/1998/NOTE-PGML-19980410">http://www.w3.org/TR/1998/NOTE-PGML-19980410</a></dt>
<dd>Precision Graphics Markup Language (PGML) W3C note, Adobe/IBM/Netscape/Sun, 1998-04-10</dd>

<dt>22. <a class="bib" name="bib22" href="http://www.w3.org/Submission/1998/08/">http://www.w3.org/Submission/1998/08/</a></dt>
<dd>Vector Markup Language specification, Autodesk/Hewlett-Packard/Macromedia/Microsoft/Visio, 1998-05-13</dd>

<dt>23. <a class="bib" name="bib23" href="http://www.w3.org/TR/1998/NOTE-HGML-19980619">http://www.w3.org/TR/1998/NOTE-HGML-19980619</a></dt>
<dd>Hyper Graphics Markup Language W3C note, PRP (UK)/Orange PCSL, 1998-06-19</dd>

<dt>24. <a class="bib" name="bib24" href="http://www.w3.org/Submission/1998/20/">http://www.w3.org/Submission/1998/20/</a></dt>
<dd>Draw Markup Language specification, Excosoft AB, 1998-11-12</dd>

<dt>25. <a class="bib" name="bib25" href="http://www.w3.org/Submission/1998/13/">http://www.w3.org/Submission/1998/13/</a></dt>
<dd>Web profile of Computer Graphics Metafile standard, ISO/IEC 8632:1992 specification, Boeing/CCLRC/Inso/JISC/Xerox, 1998-09-19</dd>

<dt>26. <a class="bib" name="bib26" href="http://www.w3.org/TR/SVG10/">http://www.w3.org/TR/SVG10/</a></dt>
<dd>SVG 1.0 W3C Recommendation, W3C/Jon Ferraiolo, 2001-09-04</dd>

<dt>27. <a class="bib" name="bib27" href="http://www.w3.org/TR/SVG11/">http://www.w3.org/TR/SVG11/</a></dt>
<dd>SVG 1.1 W3C Recommendation, W3C/Jon Ferraiolo/Fujisawa Jun/Dean Jackson, 2003-01-14</dd>

<dt>28. <a class="bib" name="bib28" href="http://www.w3.org/TR/SVGMobile/">http://www.w3.org/TR/SVGMobile/</a></dt>
<dd>Mobile SVG Profiles: SVG Tiny and SVG Basic W3C Recommendation, W3C/Tolga Capin, 2003-01-14</dd>

<dt>29. <a class="bib" name="bib29" href="http://www.w3.org/TR/SVGTiny12/">http://www.w3.org/TR/SVGTiny12/</a></dt>
<dd>SVG Tiny 1.2 W3C Recommendation, W3C, 2008-12-22</dd>

<dt>30. <a class="bib" name="bib30" href="http://www.w3.org/TR/SVG12/">http://www.w3.org/TR/SVG12/</a></dt>
<dd>SVG Full 1.2 W3C Working Draft, W3C/Dean Jackson/Craig Northway, 2005-04-13</dd>

<dt>31. <a class="bib" name="bib31" href="http://www.w3.org/TR/SVGPrint12/">http://www.w3.org/TR/SVGPrint12/</a></dt>
<dd>SVG Print 1.2 Part II: Language W3C Working Draft, W3C, 2007-12-21</dd>

<dt>32. <a class="bib" name="bib32" href="http://www.w3.org/TR/SVGMobile12/feature.html#SVG-static">http://www.w3.org/TR/SVGMobile12/feature.html#SVG-static</a></dt>
<dd>SVG Tiny 1.2 Static Profile, W3C, 2008-12-22</dd>

<dt>33. <a class="bib" name="bib33" href="http://www.w3.org/TR/xml-names/">http://www.w3.org/TR/xml-names/</a></dt>
<dd>Namespaces in XML 1.0 (3rd Edition), W3C/Tim Bray/Dave Hollander/Andrew Layman/Richard Tobin/Henry S. Thompson, 2009-12-8</dd>

<dt>34. <a class="bib" name="bib34" href="http://www.w3.org/TR/SVG11/attindex.html">http://www.w3.org/TR/SVG11/attindex.html</a></dt>
<dd>SVG 1.1 attribute index, W3C, 2003-01-14</dd>

<dt>35. <a class="bib" name="bib35" href="http://www.w3.org/TR/SVGTiny12/mimereg.html">http://www.w3.org/TR/SVGTiny12/mimereg.html</a></dt>
<dd>SVG Tiny 1.2 mimetype registration, W3C, 2008-12-22</dd>

<dt>36. <a class="bib" name="bib36" href="http://tools.ietf.org/html/rfc3023#section-3.2">http://tools.ietf.org/html/rfc3023#section-3.2</a></dt>
<dd>application/xml mimetype registration - XML Media Types, M. Murata/IBM/S. St. Laurent/simonstl.com/D. Kohn/Skymoon Ventures, 2001-01-XX</dd>

<dt>37. <a class="bib" name="bib37" href="http://www.w3.org/TR/SVG/intro.html#MIMEType">http://www.w3.org/TR/SVG/intro.html#MIMEType</a></dt>
<dd>SVG mime type, file name extension, W3C, 2003-01-14</dd>

<dt>38. <a class="bib" name="bib38" href="http://www.w3.org/TR/SVG11/intro.html#TermShape">http://www.w3.org/TR/SVG11/intro.html#TermShape</a></dt>
<dd>SVG 1.1 shape term, W3C, 2003-01-14</dd>

<dt>39. <a class="bib" name="bib39" href="http://www.w3.org/TR/SVG11/struct.html#SVGElement">http://www.w3.org/TR/SVG11/struct.html#SVGElement</a></dt>
<dd>SVG 1.1 &lt;svg&gt; element, W3C, 2003-01-14</dd>

<dt>40. <a class="bib" name="bib40" href="http://www.w3.org/TR/SVG11/shapes.html#LineElement">http://www.w3.org/TR/SVG11/shapes.html#LineElement</a></dt>
<dd>SVG 1.1 &lt;line&gt; element, W3C, 2003-01-14</dd>

<dt>41. <a class="bib" name="bib41" href="http://www.w3.org/TR/SVG11/styling.html">http://www.w3.org/TR/SVG11/styling.html</a></dt>
<dd>SVG 1.1 styling properties, W3C, 2003-01-14</dd>

<dt>42. <a class="bib" name="bib42" href="http://www.w3.org/TR/SVG11/shapes.html#PolylineElement">http://www.w3.org/TR/SVG11/shapes.html#PolylineElement</a></dt>
<dd>SVG 1.1 &lt;polyline&gt; element, W3C, 2003-01-14</dd>

<dt>43. <a class="bib" name="bib43" href="http://www.w3.org/TR/SVG11/styling.html#UsingPresentationAttributes">http://www.w3.org/TR/SVG11/styling.html#UsingPresentationAttributes</a></dt>
<dd>SVG 1.1 specifying properties using the presentation attributes, W3C, 2003-01-14</dd>

<dt>44. <a class="bib" name="bib44" href="http://www.w3.org/TR/SVG11/styling.html#Inheritance">http://www.w3.org/TR/SVG11/styling.html#Inheritance</a></dt>
<dd>SVG 1.1 styling inheritance rules, W3C, 2003-01-14</dd>

<dt>45. <a class="bib" name="bib45" href="http://www.w3.org/TR/SVG11/shapes.html#PolygonElement">http://www.w3.org/TR/SVG11/shapes.html#PolygonElement</a></dt>
<dd>SVG 1.1 &lt;polygon&gt; element, W3C, 2003-01-14</dd>

<dt>46. <a class="bib" name="bib46" href="http://www.w3.org/TR/SVG11/shapes.html#RectElement">http://www.w3.org/TR/SVG11/shapes.html#RectElement</a></dt>
<dd>SVG 1.1 &lt;rect&gt; element, W3C, 2003-01-14</dd>

<dt>47. <a class="bib" name="bib47" href="http://www.w3.org/TR/SVG11/paths.html#PathElement">http://www.w3.org/TR/SVG11/paths.html#PathElement</a></dt>
<dd>SVG 1.1 &lt;path&gt; element, W3C, 2003-01-14</dd>

<dt>48. <a class="bib" name="bib48" href="http://www.w3.org/TR/SVG11/paths.html#PathData">http://www.w3.org/TR/SVG11/paths.html#PathData</a></dt>
<dd>SVG 1.1 path data, W3C, 2003-01-14</dd>

<dt>49. <a class="bib" name="bib49" href="http://www.w3.org/TR/SVG11/shapes.html#CircleElement">http://www.w3.org/TR/SVG11/shapes.html#CircleElement</a></dt>
<dd>SVG 1.1 &lt;circle&gt; element, W3C, 2003-01-14</dd>

<dt>50. <a class="bib" name="bib50" href="http://www.w3.org/TR/SVG11/shapes.html#EllipseElement">http://www.w3.org/TR/SVG11/shapes.html#EllipseElement</a></dt>
<dd>SVG 1.1 &lt;ellipse&gt; element, W3C, 2003-01-14</dd>

<dt>51. <a class="bib" name="bib51" href="http://www.w3.org/TR/SVG11/text.html#TextElement">http://www.w3.org/TR/SVG11/text.html#TextElement</a></dt>
<dd>SVG 1.1 &lt;text&gt; element, W3C, 2003-01-14</dd>

<dt>52. <a class="bib" name="bib52" href="http://www.w3.org/TR/SVG11/animate.html#TimingAttributes">http://www.w3.org/TR/SVG11/animate.html#TimingAttributes</a></dt>
<dd>SVG 1.1 animation timing attributes, W3C, 2003-01-14</dd>

<dt>53. <a class="bib" name="bib53" href="http://www.w3.org/TR/SVG11/filters.html">http://www.w3.org/TR/SVG11/filters.html</a></dt>
<dd>SVG 1.1 filter effects, W3C, 2003-01-14</dd>

<dt>54. <a class="bib" name="bib54" href="http://www.w3.org/TR/xlink/">http://www.w3.org/TR/xlink/</a></dt>
<dd>XML Linking Language 1.0 W3C Recommendation, W3C/Steve DeRose/Eve Maler/David Orchard, 2001-06-27</dd>

<dt>55. <a class="bib" name="bib55" href="http://www.w3.org/TR/SVG11/struct.html#DefsElement">http://www.w3.org/TR/SVG11/struct.html#DefsElement</a></dt>
<dd>SVG 1.1 &lt;defs&gt; element, W3C, 2003-01-14</dd>

<dt>56. <a class="bib" name="bib56" href="http://www.w3.org/TR/SVG11/struct.html#UseElement">http://www.w3.org/TR/SVG11/struct.html#UseElement</a></dt>
<dd>SVG 1.1 &lt;use&gt; element, W3C, 2003-01-14</dd>

<dt>57. <a class="bib" name="bib57" href="http://www.w3.org/TR/SVG11/filters.html#feGaussianBlur">http://www.w3.org/TR/SVG11/filters.html#feGaussianBlur</a></dt>
<dd>SVG 1.1 &lt;feGaussianBlur&gt; filter effect, W3C, 2003-01-14</dd>

<dt>58. <a class="bib" name="bib58" href="http://www.w3.org/TR/SVG11/filters.html#feOffset">http://www.w3.org/TR/SVG11/filters.html#feOffset</a></dt>
<dd>SVG 1.1 &lt;feOffset&gt; filter effect, W3C, 2003-01-14</dd>

<dt>59. <a class="bib" name="bib59" href="http://www.w3.org/TR/SVG11/animate.html">http://www.w3.org/TR/SVG11/animate.html</a></dt>
<dd>SVG 1.1 animation elements, W3C, 2003-01-14</dd>

<dt>60. <a class="bib" name="bib60" href="http://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Software_and_support_in_applications">http://en.wikipedia.org/wiki/Scalable_Vector_Graphics#Software_and_support_in_applications</a></dt>
<dd>SVG support in applications, Wikipedia, 2010-03-26</dd>

<dt>61. <a class="bib" name="bib61" href="http://office.microsoft.com/en-us/visio/FX100487861033.aspx">http://office.microsoft.com/en-us/visio/FX100487861033.aspx</a></dt>
<dd>Microsoft Office Visio 2007 front page, Microsoft, lest 2010-04-04</dd>

<dt>62. <a class="bib" name="bib62" href="http://www.svgopen.org/2003/papers/SVG_Scenarios_using_Microsoft_Office_Visio_2003/index.html">http://www.svgopen.org/2003/papers/SVG_Scenarios_using_Microsoft_Office_Visio_2003/index.html</a></dt>
<dd>SVG Scenarios for Microsoft Visio 2003, Richard See, 2003</dd>

<dt>63. <a class="bib" name="bib63" href="http://www.adobe.com/products/illustrator/">http://www.adobe.com/products/illustrator/</a></dt>
<dd>Adobe Illustrator graphic design software, Adobe, lest 2010-04-04</dd>

<dt>64. <a class="bib" name="bib64" href="http://www.adobe.com/svg/tools.html">http://www.adobe.com/svg/tools.html</a></dt>
<dd>Adobe SVG Authoring Tools, Adobe, lest 2010-04-04</dd>

<dt>65. <a class="bib" name="bib65" href="http://www.corel.com/servlet/Satellite/us/en/Product/1191272117978">http://www.corel.com/servlet/Satellite/us/en/Product/1191272117978</a></dt>
<dd>CorelDRAW Graphics Suite X5, Corel, lest 2010-04-04</dd>

<dt>66. <a class="bib" name="bib66" href="http://www.unleash.com/davidt/svg/index.asp">http://www.unleash.com/davidt/svg/index.asp</a></dt>
<dd>SVG - From CorelDRAW to Your Browser, David Troidl, 2007</dd>

<dt>67. <a class="bib" name="bib67" href="http://corel.custhelp.com/app/answers/detail/a_id/754171/">http://corel.custhelp.com/app/answers/detail/a_id/754171/</a></dt>
<dd>CorelDRAW SVG support information - Corel Knowledgebase, Corel, lest 2010-04-04</dd>

<dt>68. <a class="bib" name="bib68" href="http://www.xara.com/us/products/xtreme/">http://www.xara.com/us/products/xtreme/</a></dt>
<dd>Xara Xtreme graphics software, Xara Group Limited, lest 2010-04-04</dd>

<dt>69. <a class="bib" name="bib69" href="http://support.xara.com/index.php?_m=knowledgebase&amp;_a=viewarticle&amp;kbarticleid=2562">http://support.xara.com/index.php?_m=knowledgebase&amp;_a=viewarticle&amp;kbarticleid=2562</a></dt>
<dd>Xara Xtreme SVG support - Xara knowledgebase, Xara Group Limited, 2007-06-13</dd>

<dt>70. <a class="bib" name="bib70" href="http://www.openoffice.org/product/draw.html">http://www.openoffice.org/product/draw.html</a></dt>
<dd>OpenOffice.org Draw, Oracle/Sun, lest 2010-04-04</dd>

<dt>71. <a class="bib" name="bib71" href="http://graphics.openoffice.org/files/documents/12/406/svg_overview.htm">http://graphics.openoffice.org/files/documents/12/406/svg_overview.htm</a></dt>
<dd>OpenOffice.org Graphics SVG integration improvement proposal, Vincent Hardy/Kai Ahrens, 2002-07-01</dd>

<dt>72. <a class="bib" name="bib72" href="http://www.inkscape.org/">http://www.inkscape.org/</a></dt>
<dd>Inkscape vector graphics editor, lest 2010-04-04</dd>

<dt>73. <a class="bib" name="bib73" href="http://wiki.inkscape.org/wiki/index.php/FAQ#What_SVG_features_does_Inkscape_implement.3F">http://wiki.inkscape.org/wiki/index.php/FAQ#What_SVG_features_does_Inkscape_implement.3F</a></dt>
<dd>Inkscape SVG support, Inkscape Wiki, 2010-02-12</dd>

<dt>74. <a class="bib" name="bib74" href="http://www.scribus.net/">http://www.scribus.net/</a></dt>
<dd>Scribus Open Source Desktop Publishing, lest 2010-04-04</dd>

<dt>75. <a class="bib" name="bib75" href="http://docs.scribus.net/index.php?lang=en&amp;page=scribus-svg">http://docs.scribus.net/index.php?lang=en&amp;page=scribus-svg</a></dt>
<dd>Scribus SVG support, Scribus documentation, lest 2010-04-04</dd>

<dt>76. <a class="bib" name="bib76" href="http://xmlgraphics.apache.org/batik/">http://xmlgraphics.apache.org/batik/</a></dt>
<dd>Batik Java SVG Toolkit, Apache Software Foundation, 2010-01-02</dd>

<dt>77. <a class="bib" name="bib77" href="http://cairographics.org/">http://cairographics.org/</a></dt>
<dd>Cairo 2D graphics library, 2010-03-02</dd>

<dt>78. <a class="bib" name="bib78" href="https://wiki.mozilla.org/Gecko_1.9_Roadmap#cairo_Graphics_Substrate">https://wiki.mozilla.org/Gecko_1.9_Roadmap#cairo_Graphics_Substrate</a></dt>
<dd>Cairo usage in Mozilla Gecko, Mozilla wiki, 2007-01-10</dd>

<dt>79. <a class="bib" name="bib79" href="http://processing.org/about/">http://processing.org/about/</a></dt>
<dd>Processing programming language, Ben Fry/Casey Reas, lest 2010-04-04</dd>

<dt>80. <a class="bib" name="bib80" href="http://dev.processing.org/reference/core/javadoc/processing/core/PApplet.html">http://dev.processing.org/reference/core/javadoc/processing/core/PApplet.html</a></dt>
<dd>PApplet class definition, Processing Project, lest 2010-04-04</dd>

<dt>81. <a class="bib" name="bib81" href="http://processing.org/reference/libraries/candy/SVG.html">http://processing.org/reference/libraries/candy/SVG.html</a></dt>
<dd>Processing SVG support, Processing Project, 2008-09-22</dd>

<dt>82. <a class="bib" name="bib82" href="http://dev.processing.org/reference/core/javadoc/processing/core/PShapeSVG.html">http://dev.processing.org/reference/core/javadoc/processing/core/PShapeSVG.html</a></dt>
<dd>PShapeSVG class definition, Processing Project, lest 2010-04-04</dd>

<dt>83. <a class="bib" name="bib83" href="http://www.adobe.com/svg/viewer/install/">http://www.adobe.com/svg/viewer/install/</a></dt>
<dd>Adobe SVG Viewer IE Plugin install page, Adobe</dd>

<dt>84. <a class="bib" name="bib84" href="http://www.w3.org/Graphics/SVG/IG/">http://www.w3.org/Graphics/SVG/IG/</a></dt>
<dd>SVG Interest Group, W3C</dd>

<dt>85. <a class="bib" name="bib85" href="http://www.codedread.com/svg-support-table.html">http://www.codedread.com/svg-support-table.html</a></dt>
<dd>SVG Support in browsers, Jeff Schiller, uthentet 2010-03-14</dd>

<dt>86. <a class="bib" name="bib86" href="http://gs.statcounter.com/#browser_version-ww-monthly-200902-201003-bar">http://gs.statcounter.com/#browser_version-ww-monthly-200902-201003-bar</a></dt>
<dd>StatCounter Global Stats, Browser version, February 2009 to March 2010</dd>

<dt>87. <a class="bib" name="bib87" href="http://www.mozilla.org/projects/svg/status.html">http://www.mozilla.org/projects/svg/status.html</a></dt>
<dd>Mozilla SVG Status, Mozilla, lest xxx</dd>

<dt>88. <a class="bib" name="bib88" href="http://www.w3.org/TR/SVG11/text.html">http://www.w3.org/TR/SVG11/text.html</a></dt>
<dd>Text - SVG 1.1, W3C, 2003-01-14</dd>

<dt>89. <a class="bib" name="bib89" href="http://www.w3.org/TR/SVG11/color.html">http://www.w3.org/TR/SVG11/color.html</a></dt>
<dd>Color - SVG 1.1, W3C, 2003-01-14</dd>

<dt>90. <a class="bib" name="bib90" href="http://www.w3.org/TR/SVG11/interact.html">http://www.w3.org/TR/SVG11/interact.html</a></dt>
<dd>Interact - SVG 1.1, W3C, 2003-01-14</dd>

<dt>91. <a class="bib" name="bib91" href="http://www.w3.org/TR/SVG11/linking.html">http://www.w3.org/TR/SVG11/linking.html</a></dt>
<dd>Linking - SVG 1.1, W3C, 2003-01-14</dd>

<dt>92. <a class="bib" name="bib92" href="http://www.w3.org/TR/SVG11/fonts.html">http://www.w3.org/TR/SVG11/fonts.html</a></dt>
<dd>Fonts - SVG 1.1, W3C, 2003-01-14</dd>

<dt>93. <a class="bib" name="bib93" href="http://www.opera.com/docs/specs/svg/">http://www.opera.com/docs/specs/svg/</a></dt>
<dd>SVG support in Opera 9, Opera, lest xxx</dd>

<dt>94. <a class="bib" name="bib94" href="http://www.opera.com/docs/specs/presto25/html5/">http://www.opera.com/docs/specs/presto25/html5/</a></dt>
<dd>Opera: HTML5 elements attributes and APIs support in Opera Presto 2.5, Opera, lest xxx</dd>

<dt>95. <a class="bib" name="bib95" href="https://developer.mozilla.org/en/Gecko">https://developer.mozilla.org/en/Gecko</a></dt>
<dd>Gecko - MDC, Mozilla, 2010-03-12</dd>

<dt>96. <a class="bib" name="bib96" href="http://webkit.org/">http://webkit.org/</a></dt>
<dd>The Webkit Open Source Project, Webkit, lest xxx</dd>

<dt>97. <a class="bib" name="bib97" href="http://webkit.org/projects/svg/status.xml">http://webkit.org/projects/svg/status.xml</a></dt>
<dd>WebKit SVG Status, Webkit, 2010-01-05</dd>

<dt>98. <a class="bib" name="bib98" href="http://blogs.msdn.com/b/ie/archive/2010/01/05/microsoft-joins-w3c-svg-working-group.aspx">http://blogs.msdn.com/b/ie/archive/2010/01/05/microsoft-joins-w3c-svg-working-group.aspx</a></dt>
<dd>Microsoft joins W3C SVG Working Group, Microsoft IE Team Blog, 2010-01-05</dd>

<dt>99. <a class="bib" name="bib99" href="https://bugzilla.mozilla.org/show_bug.cgi?id=216462">https://bugzilla.mozilla.org/show_bug.cgi?id=216462</a></dt>
<dd>Implement SVG (SMIL) Animation, Mozilla Bug Tracker, rapportert: 2003-08-17, sist endret: 2010-03-05, status: RESOLVED FIXED</dd>

<dt>100. <a class="bib" name="bib100" href="https://bugzilla.mozilla.org/show_bug.cgi?id=119490">https://bugzilla.mozilla.org/show_bug.cgi?id=119490</a></dt>
<dd>Implement SVG fonts, Mozilla Bug Tracker, rapportert: 2002-01-11, sist endret: 2010-05-25, status: ASSIGNED</dd>

<dt>101. <a class="bib" name="bib101" href="https://bugs.webkit.org/show_bug.cgi?id=15495">https://bugs.webkit.org/show_bug.cgi?id=15495</a></dt>
<dd>SVGViewSpec DOM bindings aka SVGSVGElement.currentView is unimplemented, WebKit Bug Tracker, rapportert: 2007-10-13, sist endret: 2010-05-18, status: NEW</dd>

<dt>102. <a class="bib" name="bib102" href="https://bugs.webkit.org/show_bug.cgi?id=6034">https://bugs.webkit.org/show_bug.cgi?id=6034</a></dt>
<dd>WebKit+SVG needs to support color-interpolation for gradients and opacity calculations, WebKit Bug Tracker, rapportert: 2005-12-10, sist endret: 2010-01-30, status: NEW</dd>

<dt>103. <a class="bib" name="bib103" href="http://www.oreillynet.com/mac/blog/2001/04/exploring_svg.html">http://www.oreillynet.com/mac/blog/2001/04/exploring_svg.html</a></dt>
<dd>Exploring SVG, Jason McIntosh, 2001-04-30</dd>

<dt>104. <a class="bib" name="bib104" href="http://www.adobe.com/svg/eol.html">http://www.adobe.com/svg/eol.html</a></dt>
<dd>Adobe to Discontinue Adobe SVG Viewer, Adobe, 2009-01-01</dd>

<dt>105. <a class="bib" name="bib105" href="http://en.wikipedia.org/wiki/Vector_Markup_Language">http://en.wikipedia.org/wiki/Vector_Markup_Language</a></dt>
<dd>Vector Markup Language, Wikipedia, lest 2010-05-25</dd>

<dt>106. <a class="bib" name="bib106" href="http://www.robweir.com/blog/2006/07/cum-mortuis-in-lingua-mortua.html">http://www.robweir.com/blog/2006/07/cum-mortuis-in-lingua-mortua.html</a></dt>
<dd>VML and OOXML: Cum mortuis in lingua mortua, Rob Weir, 2006-07-24</dd>

<dt>107. <a class="bib" name="bib107" href="http://www.readwriteweb.com/archives/web_browser_faceoff.php">http://www.readwriteweb.com/archives/web_browser_faceoff.php</a></dt>
<dd>Web Browser Faceoff, Alex Iskold, 2006-10-06</dd>

<dt>108. <a class="bib" name="bib108" href="http://gs.statcounter.com/#browser-ww-monthly-200807-201005">http://gs.statcounter.com/#browser-ww-monthly-200807-201005</a></dt>
<dd>StatCounter Global Stats, Browsers, July 2008 to May 2010</dd>

<dt>109. <a class="bib" name="bib109" href="http://www.sitepoint.com/blogs/2009/12/17/microsoft-browser-ballot-screen/">http://www.sitepoint.com/blogs/2009/12/17/microsoft-browser-ballot-screen/</a></dt>
<dd>Microsoft agrees to browser ballot terms, Craig Buckler, 2009-12-17</dd>

<dt>110. <a class="bib" name="bib110" href="http://gs.statcounter.com/#mobile_vs_desktop-ww-monthly-200812-201005">http://gs.statcounter.com/#mobile_vs_desktop-ww-monthly-200812-201005</a></dt>
<dd>StatCounter Global Stats, Mobile vs. Desktop,  December 2008 to May 2010</dd>

<dt>111. <a class="bib" name="bib111" href="http://www.dlocc.com/articles/apple-ipad-no-flash-plugin-support/">http://www.dlocc.com/articles/apple-ipad-no-flash-plugin-support/</a></dt>
<dd>Apple iPad: No Flash plugin support, Devin Walker, 2010-01-27</dd>

<dt>112. <a class="bib" name="bib112" href="http://tech.slashdot.org/story/10/01/06/1829223/Microsoft-Wants-To-Participate-In-SVG-Development">http://tech.slashdot.org/story/10/01/06/1829223/Microsoft-Wants-To-Participate-In-SVG-Development</a></dt>
<dd>Microsoft wants to participate in SVG development, Slashdot, 2010-01-06</dd>

<dt>113. <a class="bib" name="bib113" href="http://news.cnet.com/8301-30685_3-10426321-264.html">http://news.cnet.com/8301-30685_3-10426321-264.html</a></dt>
<dd>Microsoft Web-graphics move signals IE ambitions, CNet News, 2010-01-06</dd>

<dt>114. <a class="bib" name="bib114" href="http://msdn.microsoft.com/en-us/ie/ff468705.aspx#_Scaling_Vector_Graphics">http://msdn.microsoft.com/en-us/ie/ff468705.aspx#_Scaling_Vector_Graphics</a></dt>
<dd>Microsoft IE9 will support SVG, Microsoft Developer Network, 2010-05-05</dd>

<dt>115. <a class="bib" name="bib115" href="http://en.wikipedia.org/wiki/Adobe_Flash">http://en.wikipedia.org/wiki/Adobe_Flash</a></dt>
<dd>Adobe Flash, Wikipedia, lest 2010-05-27</dd>

<dt>116. <a class="bib" name="bib116" href="http://www.adobe.com/products/player_census/flashplayer/version_penetration.html">http://www.adobe.com/products/player_census/flashplayer/version_penetration.html</a></dt>
<dd>Adobe Flash plugin usage worldwide, Adobe, lest 2010-05-27</dd>

<dt>117. <a class="bib" name="bib117" href="http://www.planetsvg.com/content/svg-solutions-internet-explorer">http://www.planetsvg.com/content/svg-solutions-internet-explorer</a></dt>
<dd>SVG solutions for Internet Explorer, PlanetSVG, 2009-02-15</dd>

<dt>118. <a class="bib" name="bib118" href="http://www.adobe.com/support/security/#flashplayer">http://www.adobe.com/support/security/#flashplayer</a></dt>
<dd>Adobe Security bulletins and advisories, Adobe, lest 2010-05-27</dd>

<dt>119. <a class="bib" name="bib119" href="http://www.trusteer.com/files/Flash_Security_Hole_Advisory.pdf">http://www.trusteer.com/files/Flash_Security_Hole_Advisory.pdf</a></dt>
<dd>Adobe Flash Security Hole Advisory, Trusteer, 2009-08-13</dd>

<dt>120. <a class="bib" name="bib120" href="http://en.wikipedia.org/wiki/SWF">http://en.wikipedia.org/wiki/SWF</a></dt>
<dd>SWF, Wikipedia, lest 2010-05-27</dd>

<dt>121. <a class="bib" name="bib121" href="http://www.w3.org/TR/SVG11/minimize.html">http://www.w3.org/TR/SVG11/minimize.html</a></dt>
<dd>Minimize SVG File Size, W3C, 2003-01-14</dd>

<dt>122. <a class="bib" name="bib122" href="http://en.wikipedia.org/wiki/Adobe_Flash_Player">http://en.wikipedia.org/wiki/Adobe_Flash_Player</a></dt>
<dd>Adobe Flash Player, Adobe, lest 2010-05-27</dd>

<dt>123. <a class="bib" name="bib123" href="http://www.apple.com/hotnews/thoughts-on-flash">http://www.apple.com/hotnews/thoughts-on-flash</a></dt>
<dd>Thoughts on Flash, Apple, lest 2010-05-27</dd>

<dt>124. <a class="bib" name="bib124" href="http://en.wikipedia.org/wiki/Microsoft_Silverlight">http://en.wikipedia.org/wiki/Microsoft_Silverlight</a></dt>
<dd>Microsoft Silverlight, Wikipedia, lest 2010-05-27</dd>

<dt>125. <a class="bib" name="bib125" href="http://www.mono-project.com/Moonlight#Goals">http://www.mono-project.com/Moonlight#Goals</a></dt>
<dd>Moonlight - Mono Goals, Mono Project, lest 2010-05-27</dd>

<dt>126. <a class="bib" name="bib126" href="http://en.wikipedia.org/wiki/Rich_Internet_application">http://en.wikipedia.org/wiki/Rich_Internet_application</a></dt>
<dd>Rich internet applications, Wikipedia, lest 2010-05-28</dd>

<dt>127. <a class="bib" name="bib127" href="http://www.smashingmagazine.com/2009/05/09/flash-vs-silverlight-what-suits-your-needs-best">http://www.smashingmagazine.com/2009/05/09/flash-vs-silverlight-what-suits-your-needs-best</a></dt>
<dd>Flash vs. Silverlight - Deployment Part, Smashingmagazine, 2009-05-09</dd>

<dt>128. <a class="bib" name="bib128" href="http://www.microsoft.com/silverlight/what-is-silverlight">http://www.microsoft.com/silverlight/what-is-silverlight</a></dt>
<dd>What Is Silverlight?, Microsoft, lest 2010-05-27</dd>

<dt>129. <a class="bib" name="bib129" href="http://raphaeljs.com">http://raphaeljs.com</a></dt>
<dd>Raphaels - JavaScript library, RaphaelJs, lest 2010-05-27</dd>

<dt>130. <a class="bib" name="bib130" href="http://raphaeljs.com/reference.html">http://raphaeljs.com/reference.html</a></dt>
<dd>Raphael Reference, RaphaelJs, lest 2010-05-27</dd>

<dt>131. <a class="bib" name="bib131" href="http://en.wikipedia.org/wiki/Imperative_programming">http://en.wikipedia.org/wiki/Imperative_programming</a></dt>
<dd>Imperative Programming, Wikipedia, lest 2010-05-27</dd>

<dt>132. <a class="bib" name="bib132" href="http://blogs.msdn.com/b/ie/archive/2010/03/18/svg-in-ie9-roadmap.aspx">http://blogs.msdn.com/b/ie/archive/2010/03/18/svg-in-ie9-roadmap.aspx</a></dt>
<dd>SVG in IE9 Roadmap, IEBlog, 2010-03-18</dd>

<dt>133. <a class="bib" name="bib133" href="http://www.samuelclay.com/raphael/svg_open_paper.pdf">http://www.samuelclay.com/raphael/svg_open_paper.pdf</a></dt>
<dd>Raphaels Paper - SVG Open 2009, Raphael, lest 2010-05-27</dd>

<dt>134. <a class="bib" name="bib134" href="http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx">http://msdn.microsoft.com/en-us/library/bb250524%28VS.85%29.aspx</a></dt>
<dd>Vector Markup Language(VML), Microsoft, lest 2010-05-27</dd>

</dl>
<h2><a name="h-1.9"></a>Vedlegg</h2>
<p><a href="#" name="vedlegg"> </a></p>
<pre><code>Date: Sun, 07 Mar 2010 19:00:24 -0500
From: Doug Schepers &lt;schepers@w3.org&gt;
To: Robin Smidsrød &lt;robin@smidsrod.no&gt;
Subject: Re: Historical archives of SVG WG membership and activities
</code></pre>
<p>Hi, Robin-</p>
<p>This sounds like a very interesting (if esoteric) project. I have some opinions about the reasons myself, but I will refrain from imposing them on you.</p>
<p>Regarding past records... the SVG WG has only been a public working group for the past couple of years; before that, it was member-confidential, and so many of the proceedings and details are not publicly available.</p>
<p>However, I&#39;m sympathetic to your project, and I will see what I can legally and ethically do to aid you. I&#39;ve forwarded your email to my colleagues on the W3C Team, and we will discuss it internally.</p>
<p>What sort of timeline are you working on? What are your deadlines?</p>
<p>Regards- -Doug Schepers W3C Team Contact, SVG and WebApps WGs</p>
<p>Robin Smidsrød wrote (on 3/7/10 2:25 PM):</p>
<blockquote>
  <p>I&#39;m doing my bachelor assignment at Vestfold University College in Norway.</p>
  <p>My assignment is about SVG and why developers and users of web browsers still (in 2010) cannot expect SVG to be a standard that they can just assume works everywhere.</p>
  <p>As a part of my assignment I&#39;m trying to figure out a bit of historical information about the members of the SVG WG from the start of the project until today. The web page, http://www.w3.org/2000/09/dbwg/details?group=19480&amp;public=1&amp;gs=1&amp;, only lists current members og the SVG WG, but I could really need that same list, but all the way back to the start (maybe in one year intervals or anything you have, really).</p>
  <p>I noticed that the archives of public-svg-ig and public-svg-wg are only available/searchable for the last two years for the general public. Is it possible to get access to the entire archive as an mbox file, so I can do some data mining with regards to membership participation?</p>
  <p>The question I am really trying to find an answer to is which institution/company actually did the most work on the standard and when that happened. I&#39;m also trying to figure out when certain companies caught an interest in the standard and decided to join the SVG WG.</p>
  <p>Are the standardization documents tracked using some kind on revision control system that makes it easy to see who did what (and when)? Is it possible to get read-only access to this information if it exists?</p>
  <p>Hope to hear from you soon.</p>
  <p>Regards, Robin Smidsrød</p>
</blockquote>

 </body>
</html>
